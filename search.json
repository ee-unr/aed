[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "An√°lisis Exploratorio de Datos",
    "section": "",
    "text": "Bienvenida\n\n\nP√°gina en construcci√≥n.",
    "crumbs": [
      "Bienvenida"
    ]
  },
  {
    "objectID": "capitulos/00_info.html",
    "href": "capitulos/00_info.html",
    "title": "Informaci√≥n general sobre la asignatura",
    "section": "",
    "text": "Cursado\nModalidad, comisiones, horarios",
    "crumbs": [
      "Informaci√≥n general sobre la asignatura"
    ]
  },
  {
    "objectID": "capitulos/00_info.html#aula-virtual",
    "href": "capitulos/00_info.html#aula-virtual",
    "title": "Informaci√≥n general sobre la asignatura",
    "section": "Aula virtual?",
    "text": "Aula virtual?",
    "crumbs": [
      "Informaci√≥n general sobre la asignatura"
    ]
  },
  {
    "objectID": "capitulos/00_info.html#programa",
    "href": "capitulos/00_info.html#programa",
    "title": "Informaci√≥n general sobre la asignatura",
    "section": "Programa",
    "text": "Programa\nenlace al programa aprobado",
    "crumbs": [
      "Informaci√≥n general sobre la asignatura"
    ]
  },
  {
    "objectID": "capitulos/00_info.html#evaluaci√≥n",
    "href": "capitulos/00_info.html#evaluaci√≥n",
    "title": "Informaci√≥n general sobre la asignatura",
    "section": "Evaluaci√≥n",
    "text": "Evaluaci√≥n",
    "crumbs": [
      "Informaci√≥n general sobre la asignatura"
    ]
  },
  {
    "objectID": "capitulos/00_info.html#c√≥digo-de-conducta",
    "href": "capitulos/00_info.html#c√≥digo-de-conducta",
    "title": "Informaci√≥n general sobre la asignatura",
    "section": "C√≥digo de conducta",
    "text": "C√≥digo de conducta",
    "crumbs": [
      "Informaci√≥n general sobre la asignatura"
    ]
  },
  {
    "objectID": "capitulos/01.html",
    "href": "capitulos/01.html",
    "title": "Unidad 1. Introducci√≥n",
    "section": "",
    "text": "Presentaci√≥n de la Unidad 1.\n\nP√°gina en construcci√≥n.",
    "crumbs": [
      "Unidad 1. Introducci√≥n"
    ]
  },
  {
    "objectID": "capitulos/01_teoria_de_la_visualizacion.html",
    "href": "capitulos/01_teoria_de_la_visualizacion.html",
    "title": "1¬† Teor√≠a de la Visualizaci√≥n",
    "section": "",
    "text": "1.1 Introducci√≥n",
    "crumbs": [
      "Unidad 1. Introducci√≥n",
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Teor√≠a de la Visualizaci√≥n</span>"
    ]
  },
  {
    "objectID": "capitulos/01_teoria_de_la_visualizacion.html#introducci√≥n",
    "href": "capitulos/01_teoria_de_la_visualizacion.html#introducci√≥n",
    "title": "1¬† Teor√≠a de la Visualizaci√≥n",
    "section": "",
    "text": "En general, los/as estad√≠sticos/as sabemos c√≥mo visualizar datos sin ser demasiado enga√±osos. Sin embargo, es posible que no tengamos un sentido bien desarrollado de la est√©tica visual y que tomemos decisiones que restan valor al mensaje.\nLos dise√±adores, por otro lado, pueden preparar visualizaciones atractivas pero muchas veces descuidan la integridad de los datos. Lo ideal, entonces, es tomar lo mejor de ambos mundos.\nComo dice Wilke:\n\n\n\n\n\n\n\nCita\n\n\n\nLa visualizaci√≥n de datos es en parte arte y en parte ciencia. El desaf√≠o es hacer bien el arte sin equivocarse con la ciencia, y viceversa.\n\n\n\nUna visualizaci√≥n de datos tiene la obligaci√≥n de:\n\ntransmitir los datos con precisi√≥n\nno distorsionar la informaci√≥n ni inducir al error\nser est√©ticamente agradable\nser f√°cilmente interpretable\nenfocarse en un mensaje puntual (no tratar de mostrar todo junto en un mismo lugar)\nevitar caracter√≠sticas que distraigan (efectos 3D innecesarios, etc.): ‚Äúmenos es m√°s‚Äù\n\nEl objetivo de esta materia es estudiar c√≥mo aplicar estos ideales a los gr√°ficos estad√≠sticos m√°s comunes y, al mismo tiempo, afianzar los conocimientos sobre programaci√≥n orientada a visualizaciones.\nLa visualizaci√≥n de datos est√° √≠ntimamente ligada al concepto de comunicaci√≥n. Supongamos que deseamos transmitir una idea sobre el conjunto de datos que estamos analizando, a una cierta audiencia que puede estar compuesta por compa√±eros de facultad o de trabajo, al p√∫blico de un congreso, usuarios de redes sociales, etc. Para comunicarnos con √©xito, tendremos que presentarle a esa audiencia una historia clara e interesante.\n\n\n\n\n\nEn su formato tradicional, una historia se puede dividir en 3 partes: inicio, desarrollo (nudo) y final (desenlace). Un buen gr√°fico tambi√©n debe contar con estas caracter√≠sticas:\n\nInicio: plantea el interrogante que el gr√°fico desea resolver. Seguramente existe una pregunta o hip√≥tesis que marca el inicio de esta historia. Presentar gr√°ficos sin contexto, o sin explicar qu√© fue lo que los motiv√≥, puede afectar nuestra capacidad de comprender la visualizaci√≥n o de interesarnos en ella.\nDesarrollo: en este contexto, podemos pensar al desarrollo de la historia como las decisiones estad√≠sticas que se tomaron para dar respuesta a la pregunta planteada inicialmente. Cu√°ndo y c√≥mo se recolectaron los datos, qu√© se hizo con ellos, c√≥mo se los manipul√≥ (en el buen sentido), c√≥mo se los analiz√≥, por qu√© se eligi√≥ este gr√°fico en particular, etc.\nFinal: el desenlace de la historia consiste en la presentaci√≥n del gr√°fico como producto final, adjuntando interpretaciones que podemos obtener como estad√≠sticos/as al analizar las figuras generadas. En este punto es importante aplicar los conceptos mencionados arriba (visualizaciones que transmitan un mensaje fiel a los datos, est√©ticamente agradables, etc.), y al mismo tiempo acompa√±arla de conclusiones v√°lidas que dejen claramente planteada nuestra visi√≥n de esta historia.\n\nNo siempre vamos a poder aplicar la estructura reci√©n mencionada: hay contextos donde la historia detr√°s de la visualizaci√≥n no es tan importante, o donde un gr√°fico individual no alcanza para contarla de manera completa. Tambi√©n es cierto que resulta dif√≠cil ‚Äúvender‚Äù algunos gr√°ficos en particular (¬øalguien alguna vez se emocion√≥ mirando un boxplot?) ü§£.\nM√°s all√° de esto, consideramos importante que el an√°lisis exploratorio de datos sea riguroso desde el punto de vista estad√≠stico, pero que al mismo tiempo incorpore conceptos que realcen su impacto visual y su potencial comunicativo.",
    "crumbs": [
      "Unidad 1. Introducci√≥n",
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Teor√≠a de la Visualizaci√≥n</span>"
    ]
  },
  {
    "objectID": "capitulos/01_teoria_de_la_visualizacion.html#fundamentos-de-la-visualizaci√≥n",
    "href": "capitulos/01_teoria_de_la_visualizacion.html#fundamentos-de-la-visualizaci√≥n",
    "title": "1¬† Teor√≠a de la Visualizaci√≥n",
    "section": "1.2 Fundamentos de la Visualizaci√≥n",
    "text": "1.2 Fundamentos de la Visualizaci√≥n\n\nCada vez que visualizamos datos, estamos tomando sus valores y convirti√©ndolos de manera sistem√°tica y l√≥gica en los elementos visuales que conforman el gr√°fico final. El proceso de asignar ciertos datos a ciertas caracter√≠sticas del gr√°fico es la esencia de la visualizaci√≥n de datos.\nLe decimos mapeo (en ingl√©s, mapping) a esta correspondencia entre dato/caracter√≠stica. A su vez, las caracter√≠sticas que conforman el gr√°fico son llamadas est√©ticas (aesthetics). Este vocabulario puede sonar familiar, ya que es empleado por el paquete ggplot2 de R.\nNo debe confundirse este concepto de est√©tica con el utilizado usualmente (estudio y valoraci√≥n de lo que se percibe como bello, art√≠stico, de buen gusto, etc.), sino que debe entenderse como aquello que se puede percibir con los sentidos, la cual es su definici√≥n original en idioma griego.\nPor lo tanto, cuando hablemos de elementos est√©ticos en esta materia, estamos haciendo referencia a las caracter√≠sticas que percibimos visualmente en un gr√°fico.\n\n\n1.2.1 Est√©ticas\n\nLas est√©ticas describen cada aspecto de un determinado gr√°fico. Las m√°s comunes son:\n\nPosici√≥n (position): generalmente como coordenadas cartesianas \\((x, y)\\) en gr√°ficos en 2D, aunque existen otras posibilidades (coordenadas polares, gr√°ficos tridimensionales, etc.)\nForma (shape)\nTama√±o (size)\nColor\nAncho de l√≠nea (line width)\nTipo de l√≠nea (line type)\n\n\n\n\n\n\n\n\n\n\n\n\nTodas las est√©ticas se pueden clasificar dentro de 2 posibles grupos: las que permiten representar datos continuos, y las que no. Entre las mencionadas arriba, tenemos que posici√≥n, tama√±o, color y ancho de l√≠nea pueden ser utilizadas para datos continuos, mientras que forma y tipo de l√≠nea s√≥lo sirven para datos categ√≥ricos o discretos.\nVeamos a continuaci√≥n algunos ejemplos sencillos con el tradicional conjunto de datos de las flores de Iris.\n\n\nEjemplo 1\nRepresentamos dos variables cuantitativas continuas en un sistema de ejes cartesianos (est√©tica de la posici√≥n). Tama√±o, forma (c√≠rculo) y color (negro) permanecen constantes para todos los datos; son est√©ticas presentes pero que no agregan informaci√≥n.\n\n\n\n\n\n\n\n\n\n\n\nEjemplo 2\nUtilizamos la est√©tica ‚Äòforma‚Äô para representar una variable categ√≥rica (especie) que agrega informaci√≥n. Recordemos que la forma s√≥lo puede asociarse a una cantidad finita (discreta) de valores; no tendr√≠a sentido asociar el ancho del p√©talo con la forma. Notemos adem√°s la necesidad de incorporar una leyenda al gr√°fico que permita relacionar formas con valores puntuales de los datos.\n\n\n\n\n\n\n\n\n\n\n\nEjemplo 3\nUsamos la est√©tica ‚Äòtama√±o‚Äô para representar una tercera variable, en este caso ancho del s√©palo. El di√°metro de cada punto ahora depende de esta variable: flores con s√©palo m√°s anchos se grafican con puntos de mayor di√°metro. Una vez m√°s, necesitamos una leyenda adecuada para interpretar el gr√°fico.\n\n\n\n\n\n\n\n\n\n\n\nEjemplo 4\nEst√©ticas que se pueden usar para datos continuos, como el tama√±o, tambi√©n sirven para representar datos discretos. Advertimos que este uso no es recomendable, ya que la diferencia de tama√±o entre especies dificulta la correcta interpretaci√≥n de los datos graficados.\n\n\n\n\n\n\n\n\n\n\n\nEjemplo 5\nUna manera correcta de diferenciar las especies es asignando una paleta de colores que las distinga (es importante que la elecci√≥n de colores no opaque el mensaje; hablaremos de esto m√°s adelante). Si bien la est√©tica del ‚Äòcolor‚Äô fue planteada arriba como continua, tambi√©n resulta muy √∫til para representar datos discretos. Este gr√°fico es una alternativa al ejemplo 2: ambos muestran exactamente la misma informaci√≥n, pero haciendo uso de diferentes est√©ticas.\n\n\n\n\n\n\n\n\n\n\n\nEjemplo 6\nAhora usamos la est√©tica ‚Äòcolor‚Äô para representar datos continuos, en este caso nuevamente el ancho del s√©palo. Ac√° tambi√©n debemos prestar especial atenci√≥n a la paleta elegida para que el mensaje sea lo m√°s claro posible. Este gr√°fico es una versi√≥n alternativa al del ejemplo 3: muestra la misma informaci√≥n pero con est√©ticas distintas.\n\n\n\n\n\n\n\n\n\n\n\nEjemplo 7\nUn mamarracho donde el color se asigna al ancho de s√©palo, el tama√±o al largo del s√©palo y la forma a la especie. No debemos olvidar la m√°xima que postula que ‚Äòmenos es m√°s‚Äô. Al querer mostrar todas las variables al mismo tiempo, terminamos creando una visualizaci√≥n demasiado cargada de informaci√≥n, compleja y dif√≠cil de interpretar.\n\n\n\n\n\n\n\n\n\n\n\n\n1.2.2 Escalas\n\nPara unir el mundo de las est√©ticas con el mundo de los datos necesitamos especificar qu√© valores de los datos se corresponden con qu√© valores espec√≠ficos de las est√©ticas.\nPor ejemplo, si nuestro gr√°fico tiene un eje X, sabemos que el valor ‚Äú5‚Äù estar√° a una distancia de 5 unidades del origen, el valor ‚Äú10‚Äù estar√° al doble de distancia, etc. Este mapeo en particular, que corresponde a la est√©tica de posici√≥n, se da de manera natural, casi inconsciente.\nLos restantes mapeos requieren de un poco m√°s de reflexi√≥n. Si vamos a usar colores para representar grupos, debemos especificar c√≥mo relacionarlos (ej: Argentina = celeste, Brasil = verde, etc.).\nEsta asociaci√≥n entre valores de los datos y valores de las est√©ticas se crea mediante la definici√≥n de una escala, la cual determina una relaci√≥n entre datos y est√©ticas, y al mismo tiempo crea la necesidad de incluir en el gr√°fico una leyenda que deje en claro los detalles de esa asociaci√≥n.\nSiempre que se defina una escala, cada valor necesita estar asociado a una √∫nica posici√≥n, forma o color, y viceversa. En otras palabras, la relaci√≥n debe ser biun√≠voca (uno a uno). Escalas que no cumplan esta propiedad b√°sica deben evitarse a toda costa, ya que el gr√°fico no ser√° coherente.\n\n\nEjemplo: temperaturas mensuales\n\nA continuaci√≥n se presentan las primeras filas de un conjunto de datos que proporciona las temperaturas mensuales normales (temperatura promedio en cada mes durante una ventana de 30 a√±os) para cuatro ciudades de Argentina. Esta tabla contiene 5 variables: mes, ciudad, provincia, c√≥digo de la estaci√≥n meteorol√≥gica que mide los datos, y temperatura (en grados cent√≠grados).\n\n\n\n\nMes\nCiudad\nProvincia\nC√≥digo\nTemperatura\n\n\n\n\nEne\nLa Quiaca\nJujuy\nSASQ\n13.2\n\n\nEne\nRosario\nSanta Fe\nSAAR\n24.8\n\n\nEne\nBariloche\nR√≠o Negro\nSAZS\n15.4\n\n\nEne\nUshuaia\nTierra del Fuego\nSAWH\n9.4\n\n\nFeb\nLa Quiaca\nJujuy\nSASQ\n13\n\n\nFeb\nRosario\nSanta Fe\nSAAR\n23.4\n\n\nFeb\nBariloche\nR√≠o Negro\nSAZS\n15\n\n\nFeb\nUshuaia\nTierra del Fuego\nSAWH\n8.4\n\n\nMar\nLa Quiaca\nJujuy\nSASQ\n12.8\n\n\nMar\nRosario\nSanta Fe\nSAAR\n21.5\n\n\nMar\nBariloche\nR√≠o Negro\nSAZS\n12.1\n\n\nMar\nUshuaia\nTierra del Fuego\nSAWH\n6.2\n\n\n\n\nCon estos datos se realizaron las siguientes figuras:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nResponder\n\n\n\n\n¬øCon qu√© est√©ticas se asoci√≥ a cada variable en el primer gr√°fico?\n¬øCon qu√© est√©ticas se asoci√≥ a cada variable en el segundo gr√°fico?\n¬øPodr√≠amos cambiar el orden en el que aparecen las categor√≠as representadas en los ejes del segundo gr√°fico?",
    "crumbs": [
      "Unidad 1. Introducci√≥n",
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Teor√≠a de la Visualizaci√≥n</span>"
    ]
  },
  {
    "objectID": "capitulos/01_teoria_de_la_visualizacion.html#sistemas-de-coordenadas-y-ejes",
    "href": "capitulos/01_teoria_de_la_visualizacion.html#sistemas-de-coordenadas-y-ejes",
    "title": "1¬† Teor√≠a de la Visualizaci√≥n",
    "section": "1.3 Sistemas de coordenadas y ejes",
    "text": "1.3 Sistemas de coordenadas y ejes\n\nPara realizar cualquier tipo de visualizaci√≥n de datos necesitamos definir escalas de posici√≥n, las cuales determinan en qu√© parte del gr√°fico se ubican los diferentes datos. Adem√°s, tenemos que especificar la disposici√≥n geom√©trica relativa de estas escalas.\n\n\n\n\n\n\n\nDefinici√≥n\n\n\n\nLa combinaci√≥n de un conjunto de escalas de posici√≥n y su disposici√≥n geom√©trica relativa se denomina sistema de coordenadas.\n\n\n\nEn visualizaciones 2D se requieren dos n√∫meros para especificar un punto de manera √∫nica en el plano y, por lo tanto, necesitamos dos escalas de posici√≥n. Estas dos escalas suelen ser los ejes X e Y del gr√°fico.\nConvencionalmente, ambos ejes son perpendiculares entre s√≠ y representan escalas lineales, pero tambi√©n podr√≠amos elegir disposiciones no lineales. M√°s adelante veremos ejemplos de ambos casos.\n\n\n1.3.1 Coordenadas cartesianas\n\nEl sistema de coordenadas 2D m√°s utilizado para la visualizaci√≥n de datos es el cartesiano, llamado as√≠ en honor al fil√≥sofo y matem√°tico franc√©s Ren√© Descartes, quien desarroll√≥ este concepto en el siglo XVII.\nCada ubicaci√≥n en el plano bidimensional se especifica de forma √∫nica mediante un valor correspondiente al eje X (eje de las abscisas) y un valor correspondiente al eje Y (eje de las ordenadas).\n\n\n\n\n\n\n\nMuchas veces los ejes representan variables con unidades de medida diferentes. En estos casos es v√°lido estirar o comprimir uno en relaci√≥n con el otro; el grado de distorsi√≥n utilizado depender√° de qu√© mensaje queremos transmitir a partir del gr√°fico en cuesti√≥n:\n\nuna figura baja y ancha resalta cambios a lo largo del eje X\nuna figura alta y angosta resalta cambios a lo largo del eje Y\n\nIdealmente, vamos a elegir una relaci√≥n de aspecto que asegure que cualquier diferencia importante sea perceptible, y que al mismo tiempo no distorsione demasiado la visualizaci√≥n.\nEjemplo: temperaturas medias (suavizadas) de Rosario entre el 01/08/2022 y el 31/07/2023. ¬øQu√© ocurre cuando la relaci√≥n de aspecto (alto/ancho) est√° muy distante del 1?\n\n\n\n\n\n\n\n\n\n\n\nSi los ejes se definen en las mismas unidades de medida, se recomienda que los espaciados de la grilla sean iguales, de modo que una distancia de \\(z\\) unidades a lo largo del eje X tenga la misma longitud que una distancia de \\(z\\) unidades a lo largo del eje Y.\nPor √∫ltimo, cabe destacar que el sistema de coordenadas cartesiano es invariante ante transformaciones lineales de las unidades de medida. Esto implica que la forma, aspecto y distancias presentes en el gr√°fico no se modifican si pasamos de cent√≠metros a kil√≥metros, gramos a toneladas, Celsius a Fahrenheit, etc.\n\n\n\n1.3.2 Ejes lineales\n\nEn los ejemplos presentados hasta ahora, las l√≠neas de la cuadr√≠cula a lo largo de cada eje est√°n espaciadas uniformemente. Esto implica que dos pares de puntos que est√°n a la misma distancia tienen la misma magnitud de diferencia entre sus valores.\nEn estos sistemas de coordenadas decimos que las escalas de posici√≥n son lineales.\n\n\n\n1.3.3 Ejes no lineales\n\nExisten escenarios en los que se prefieren escalas no lineales, en las cuales dos pares de puntos que visualmente se encuentran a la misma distancia, no poseen la misma magnitud de diferencia entre sus valores.\nLa escala no lineal m√°s utilizada es la logar√≠tmica. Recordemos que \\(\\log_b x = y \\implies b^y = x\\).\nLa siguiente figura muestra la relaci√≥n entre una escala lineal y otra logar√≠tmica, en base 10. Se representan 5 datos (1, 3.16, 10, 31.6 y 100):\n\n\n\n\n\n\n\n\n\n\n\nLas escalas logar√≠tmicas son lineales en la multiplicaci√≥n, de modo que un salto constante en la escala corresponde a una multiplicaci√≥n por un valor fijo. Por ejemplo, en este caso cada dato se obtiene multiplicando el anterior por \\(\\sqrt{10} \\approx 3.16\\), y debido a esto se ven equiespaciados en la escala logar√≠tmica de base 10.\nGeom√©tricamente no hay diferencia entre graficar los datos transformados logar√≠tmicamente en una escala lineal o graficar los datos originales en una escala logar√≠tmica: la √∫nica diferencia radica en el etiquetado del eje.\nGeneralmente es preferible etiquetar la escala logar√≠tmica con los valores originales (tercer panel en la figura), porque es m√°s f√°cil interpretar los n√∫meros que se muestran. Adem√°s, nunca debemos olvidarnos de aclarar la base utilizada en el c√°lculo de los logaritmos.\nDebido a que la multiplicaci√≥n en una escala logar√≠tmica se comporta de manera similar que la suma en una escala lineal, las escalas logar√≠tmicas son la elecci√≥n natural para cualquier dato que se haya obtenido mediante multiplicaci√≥n o divisi√≥n (por ejemplo, tasas o razones).\n\n\nEjemplo: Censo 2022\n\n\n\nPara los gr√°ficos que se muestran a continuaci√≥n, se tom√≥ el n√∫mero de habitantes de cada provincia de Argentina, seg√∫n el Censo 2022, y se lo dividi√≥ por la mediana de esos 24 valores (23 provincias + CABA).\nLa raz√≥n resultante es un n√∫mero que puede ser:\n\nMayor a 1 si la provincia tiene m√°s habitantes que la mediana\nIgual a 1 si la provincia tiene una poblaci√≥n igual a la mediana\nMenor a 1 si la provincia tiene menos habitantes que la mediana\n\nCuando trabajamos con razones, el 1 es el punto medio (como el 0 en una escala lineal). Cada valor de 1 a \\(+\\infty\\) se corresponde con un valor entre 0 y 1.\n\n\n\nVeamos estas razones graficadas en escala logar√≠tmica (la l√≠nea punteada indica una raz√≥n de 1):\n\n\n\n\n\n\n\n\n\n\nPor el contrario, para los mismos datos, una escala lineal esconde las diferencias entre provincias con poblaciones mucho m√°s peque√±as:\n\n\n\n\n\n\n\n\n\n\nLas escalas logar√≠tmicas tambi√©n se usan cuando el conjunto de datos tiene n√∫meros de magnitudes muy diferentes, aunque no representen multiplicaciones o divisiones. Si trabajamos con datos que toman el valor 0, se suele recomendar usar una escala de ra√≠z cuadrada.\n\n\n\n\n1.3.4 Sistemas de coordenadas con ejes curvos\n\nHasta ahora vimos el uso de dos ejes colocados de forma perpendicular (en √°ngulo recto) entre s√≠.\nSin embargo, existen otros sistemas de coordenadas en los que los propios ejes son curvos.\nUno de ellos es el sistema de coordenadas polares, en el que especificamos posiciones a trav√©s de un √°ngulo y una distancia radial desde el origen.\nLa siguiente figura muestra la relaci√≥n entre coordenadas cartesianas y polares.\nLas coordenadas \\(x\\) se usan como coordenadas angulares y las coordenadas \\(y\\) se usan como coordenadas radiales:\n\n\n\n\n\n\n\n\n\n\n\nEn este ejemplo el eje circular \\(x\\) va de 0 a 4 y, por lo tanto, \\(x = 0\\) y \\(x = 4\\) tienen la misma ubicaci√≥n.\nPor eso, las coordenadas polares pueden ser √∫tiles para datos de naturaleza peri√≥dica, de modo que los valores en un extremo de la escala se puedan unir l√≥gicamente a los valores en el otro extremo (ejemplo: cuando se quiere ver c√≥mo var√≠a una cantidad a lo largo del a√±o).\nEl siguiente gr√°fico muestra ese caso. La figura es adecuada ya que las temperaturas normales diarias son temperaturas promedio que no est√°n vinculadas a ning√∫n a√±o espec√≠fico: el 31 de diciembre se puede considerar como ‚Äú364 d√≠as despu√©s‚Äù o bien ‚Äúun d√≠a antes‚Äù del 1¬∞ de enero.\nAl graficar las temperaturas normales diarias en un sistema de coordenadas polares, enfatizamos la propiedad c√≠clica que poseen. Adem√°s, esta versi√≥n polar destaca cu√°n similares o dis√≠miles son las temperaturas en distintas ciudades a lo largo de ciertos per√≠odos.\nAclaraciones:\n\nLa distancia radial desde el punto central indica la temperatura diaria en Celsius.\nLos d√≠as del a√±o est√°n ordenados en el sentido contrario a las agujas del reloj, comenzando con el 1 de enero en la posici√≥n de las 6:00.\n\n\n\n\n\n\n\n\n\n\n\n\nEn el contexto de datos geo-espaciales suelen aparecer casos en los que se utilizan ejes curvos, pero que no son necesariamente sistemas de coordenadas polares. M√°s adelante, en la secci√≥n dedicada a visualizaciones mediante mapas, retomaremos este tema.",
    "crumbs": [
      "Unidad 1. Introducci√≥n",
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Teor√≠a de la Visualizaci√≥n</span>"
    ]
  },
  {
    "objectID": "capitulos/01_teoria_de_la_visualizacion.html#escalas-de-color",
    "href": "capitulos/01_teoria_de_la_visualizacion.html#escalas-de-color",
    "title": "1¬† Teor√≠a de la Visualizaci√≥n",
    "section": "1.4 Escalas de color",
    "text": "1.4 Escalas de color\n\nHay tres casos fundamentales del uso de colores en una visualizaci√≥n de datos:\n\nDiferenciar grupos\nRepresentar valores\nResaltar un mensaje\n\n\n\n1.4.1 Diferenciar grupos\n\nCuando se usa el color como un medio para distinguir elementos discretos, o grupos que no tienen un orden intr√≠nseco, debemos emplear una escala de color cualitativa.\nEn ese tipo de escala se cuenta con un conjunto finito de colores espec√≠ficos que se eligen para que se vean claramente distintos entre s√≠, pero al mismo tiempo resulten similares (que ninguno se destaque sobre el resto).\nEn este caso, los colores no deben crear la impresi√≥n de un orden, por ejemplo, no se debe usar una secuencia de colores que se van aclarando u oscureciendo.\nHay escalas de colores predefinidas que tienen en cuenta estos aspectos:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEscalas de color cualitativas\n\n\n\n\nFila 1: la paleta de colores de Okabe-Ito fue propuesta en 2008 como una alternativa accesible a personas con deficiencia de la visi√≥n del color. Incluye colores vivos que se pueden nombrar f√°cilmente y que corresponden a los principales colores primarios y secundarios.\nFila 2: la escala Dark2 pertenece al proyecto ColorBrewer, desarrollado en 2017 por Cynthia Brewer, una cart√≥grafa que se ha dedicado a crear paletas de colores √∫tiles para distintos contextos.\nFila 3: la escala ggplot2 hue es la escala cualitativa predeterminada en este paquete.\n\n\n\n\nEjemplo. Crecimiento de la poblaci√≥n de Argentina de 2010 a 2022. Las provincias patag√≥nicas (color naranja) han experimentado los mayores aumentos, mientras que las de la regi√≥n pampeana (color rosa) han experimentado aumentos mucho menores.\n\n\n\n\n\n\n\n\n\n\n\n\n1.4.2 Representar valores\n\nEn este caso utilizamos una escala de color secuencial. Este tipo de escala contiene una secuencia de colores que indican claramente:\n\nqu√© valores son m√°s grandes o m√°s peque√±os que otros;\nqu√© tan distantes est√°n dos valores espec√≠ficos entre s√≠ (se debe percibir que la escala de colores var√≠a uniformemente en toda su gama).\n\n\n\n\n\nLas escalas secuenciales pueden basarse en un solo tono, por ejemplo de azul oscuro a azul claro, o en m√∫ltiples tonos (de rojo oscuro a amarillo claro, etc.).\nLas escalas de varios tonos tienden a seguir gradientes de color que se pueden ver en el mundo natural.\nUn uso muy frecuente de este tipo de escalas, como veremos m√°s adelante, es para representar mapas coropl√©ticos.\nLas siguientes son ejemplos de escalas predefinidas. La primera es monocrom√°tica, las otras no.\n\n\n\n\n\n\n\n\n\n\n\nAplicamos la escala viridis para recrear el gr√°fico sobre crecimiento porcentual de la poblaci√≥n en cada provincia:\n\n\n\n\n\n\n\n\n\n\n\nEn algunos casos, necesitamos visualizar la desviaci√≥n de los valores de los datos en una de dos direcciones con respecto a un punto medio neutral (ejemplo: n√∫meros positivos y negativos).\nEs posible que queramos mostrarlos con diferentes colores, de modo que sea inmediatamente obvio si un valor es positivo o negativo, as√≠ como cu√°nto se desv√≠a del punto medio elegido.\nEn estos casos hay que usar una escala de color divergente: es la combinaci√≥n de dos escalas secuenciales unidas en un punto medio com√∫n, que generalmente se representa con un color claro.\n\n\n\n\n\n\n\n\n\n\n\nEs necesario equilibrar las escalas divergentes, de modo que la progresi√≥n de los colores claros en el centro a los colores oscuros en el exterior sea aproximadamente la misma en cualquier direcci√≥n (ser√≠a enga√±oso representar un valor de magnitud \\(x\\) con un color mucho m√°s claro u oscuro que el utilizado para representar un valor de magnitud \\(-x\\)).\nA continuaci√≥n graficamos nuevamente el % de crecimiento poblacional en cada provincia, pero asumiendo que el punto medio viene dado por la mediana de estos porcentajes:\n\n\n\n\n\n\n\n\n\n\n\nLas escalas divergentes suelen funcionar mejor cuando los datos son aproximadamente sim√©tricos; en este caso, el punto medio corresponde a 18%, la mediana de los crecimientos observados entre ambos censos para cada jurisdicci√≥n. Tierra del Fuego, que podr√≠a llegar a considerarse como un outlier (crecimiento de casi 50%), hace que la escala de colores no se visualice en todo su rango.\n\n\n\n1.4.3 Resaltar un mensaje\n\nEn ciertas oportunidades se usan colores para enfatizar elementos relevantes de la figura, en especial cuando hay categor√≠as o valores espec√≠ficos en el conjunto de datos que contienen informaci√≥n clave sobre la historia que queremos contar.\nEn estos casos hay que usar una escala de colores acentuados, que son escalas de colores que contienen un conjunto de colores tenues y un conjunto coincidente de colores m√°s fuertes, m√°s oscuros y/o m√°s saturados.\nAs√≠, se logra el √©nfasis coloreando ciertos elementos de la figura en un color o conjunto de colores que se destacan v√≠vidamente en comparaci√≥n al resto.\nEjemplos de escalas de colores acentuados, cada una con cuatro colores base y tres colores acentuados:\n\n\n\n\n\n\n\n\n\n\n\nLas escalas de colores acentuados se pueden derivar de varias maneras diferentes:\n\nFila 1: tomar una escala de colores existente como la de Okabe Ito y aclarar y/o desaturar parcialmente algunos colores mientras oscurecemos otros.\nFila 2: tomar valores grises y emparejarlos con colores m√°s llamativos.\nFila 3: usar una escala existente, como alguna del proyecto ColorBrewer.\n\nEjemplo: destacamos la provincia de Santa Fe:",
    "crumbs": [
      "Unidad 1. Introducci√≥n",
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Teor√≠a de la Visualizaci√≥n</span>"
    ]
  },
  {
    "objectID": "capitulos/01_buenas_practicas_visualizacion.html",
    "href": "capitulos/01_buenas_practicas_visualizacion.html",
    "title": "2¬† Buenas Pr√°cticas para la Visualizaci√≥n de Datos",
    "section": "",
    "text": "2.1 Principio de la tinta proporcional",
    "crumbs": [
      "Unidad 1. Introducci√≥n",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Buenas Pr√°cticas para la Visualizaci√≥n de Datos</span>"
    ]
  },
  {
    "objectID": "capitulos/01_buenas_practicas_visualizacion.html#principio-de-la-tinta-proporcional",
    "href": "capitulos/01_buenas_practicas_visualizacion.html#principio-de-la-tinta-proporcional",
    "title": "2¬† Buenas Pr√°cticas para la Visualizaci√≥n de Datos",
    "section": "",
    "text": "En ciertos gr√°ficos, los valores representados se asocian a dos elementos distintos de la visualizaci√≥n empleada. Pensemos por ejemplo en un gr√°fico de barras: el valor que le corresponde a cada una se puede transmitir a trav√©s de la escala del eje Y (o del eje X, si usamos barras horizontales), pero tambi√©n se transmite visualmente mediante la longitud de la barra.\nEn estos casos, si elegimos iniciar el eje en un valor distinto de 0, la longitud de la barra puede no representar fielmente el valor que le corresponde, creando una inconsistencia en el mensaje transmitido.\nAnte esta situaci√≥n, ciertos autores proponen respetar el ‚Äúprincipio de la tinta proporcional‚Äù: las √°reas sombreadas en un gr√°fico deben ser proporcionales a los valores num√©ricos que representan.\n\n\n\nEn el panel A del gr√°fico de arriba, vemos que la altura de la barra correspondiente a CABA (7.97%) es consistente con la altura de la barra correspondiente a Santa Fe (11.3%). La raz√≥n entre las alturas de ambas barras, \\(7.97/11.3 = 0.7\\), coincide con la raz√≥n entre los valores num√©ricos que representan.\nEsto no ocurre con el gr√°fico del panel B. En este caso, la raz√≥n entre las alturas de las barras resulta (\\(0.97/4.3 = 0.22\\)), muy lejano del 70% correcto. Al modificar el punto inicial del eje, podemos hacer que la diferencia percibida entre individuos se exagere considerablemente.\nEn consecuencia, el gr√°fico del panel B no cumple con el principio de tinta proporcional. La moraleja de esta historia es que los gr√°ficos de barra deben comenzar su escala en el valor 0.\nAlgo similar ocurre con los gr√°ficos para series de tiempo, sobre todo si elegimos sombrear el √°rea bajo la l√≠nea. Debajo vemos la evoluci√≥n de la cantidad de nacimientos registrados en la Maternidad Martin de Rosario, entre enero de 2015 y diciembre de 2018 (datos descargados del Portal de Datos Abiertos de la Municipalidad de Rosario):\n\n\n\nUna vez m√°s, vemos que los cambios entre per√≠odos adyacentes se exageran cuando recortamos la escala del eje Y. Si bien hubo una baja pronunciada de nacimientos entre julio y agosto de 2017 (bajaron de 365 a 262, m√°s del 28%), esta diferencia se percibe mucho mayor en el gr√°fico B que en el gr√°fico A.\n\n\n2.1.1 Tinta proporcional usando √°reas\n\nEn los ejemplos anteriores, vimos c√≥mo respetar este principio mediante alturas de barras o l√≠neas, es decir, cuando la dimensi√≥n a considerar es una sola.\nAhora veremos casos donde los valores representados comprenden 2 dimensiones. En particular, analizaremos 2 tipos de gr√°ficos: el de sectores circulares (torta) y el de √°reas rectangulares (treemap).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEn estos dos ejemplos se verifica el principio de tinta proporcional: el √°rea ocupada por cada regi√≥n (ya sean porciones de c√≠rculo o rect√°ngulos) con respecto al √°rea total del gr√°fico, resulta proporcional a su valor correspondiente.\nPor ejemplo, teniendo en cuenta que el 58% de la poblaci√≥n que vive en la regi√≥n pampeana lo hace en la provincia de Buenos Aires, sabemos que el 58% del √°rea del c√≠rculo corresponde a Buenos Aires (√°ngulo de \\(0.58\\times360¬∫ = 211¬∫\\)) y tambi√©n que el rect√°ngulo rojo ocupa un 58% del √°rea total del gr√°fico treemap.\nEn ambos casos, al no haber un origen de eje desde el cual comenzar a contar, el principio de tinta proporcional es ‚Äúdif√≠cil‚Äù de incumplir.\nPara concluir, mencionamos que los gr√°ficos que utilizan el recurso del √°rea para comparar magnitudes tienden a achicar visualmente las diferencias entre individuos, en comparaci√≥n a lo que ocurre en un gr√°fico de barras, donde estas diferencias se magnifican.\nVeamos una vez m√°s los datos de poblaci√≥n para provincias pampeanas, pero a trav√©s de un gr√°fico de barras verticales: la proporci√≥n correspondiente a Buenos Aires parece mucho mayor que el 58%:",
    "crumbs": [
      "Unidad 1. Introducci√≥n",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Buenas Pr√°cticas para la Visualizaci√≥n de Datos</span>"
    ]
  },
  {
    "objectID": "capitulos/01_buenas_practicas_visualizacion.html#puntos-superpuestos",
    "href": "capitulos/01_buenas_practicas_visualizacion.html#puntos-superpuestos",
    "title": "2¬† Buenas Pr√°cticas para la Visualizaci√≥n de Datos",
    "section": "2.2 Puntos superpuestos",
    "text": "2.2 Puntos superpuestos\n\nCuando queremos armar un diagrama de dispersi√≥n a partir de un conjunto de datos muy extenso, usualmente nos encontramos con el problema de la superposici√≥n de puntos: muchas observaciones con valores similares que se ‚Äúpisan‚Äù unas a otras en el gr√°fico resultante, ocultando informaci√≥n valiosa.\nAlgo similar suele ocurrir si trabajamos con variables discretas, o cuyos valores hayan sido redondeados: en estos casos, a√∫n con un conjunto de datos peque√±o, es com√∫n encontrar perfiles id√©nticos de respuesta que se superponen en un diagrama de dispersi√≥n.\nEjemplo: partos en Rosario durante 2015/2018:\n\n\n\n\n\n\n\n\n\n\n\nA continuaci√≥n veremos algunas maneras de remediar, al menos parcialmente, este problema.\n\n\n2.2.1 Transparencia + Perturbaci√≥n\n\nLa m√°s com√∫n de las propuestas consiste en utilizar puntos con cierto nivel de transparencia para representar a cada observaci√≥n. En el c√≥digo de ggplot2 se la define mediante el par√°metro alpha, el cual puede tomar valores desde 0 (totalmente transparente, es decir, no se ve el punto) hasta 1 (color s√≥lido, el valor por defecto).\nDe todas maneras, graficar 10 puntos transparentes uno encima de otro no cambia nada: vamos a seguir perdiendo informaci√≥n a la hora de visualizar los datos. Por esto es que se agrega una perturbaci√≥n aleatoria (jitter en ingl√©s) que modifica levemente la posici√≥n original de cada punto.\nEjemplo: puntos originales (azul) y puntos nuevos (rojo) luego de aplicar una perturbaci√≥n de a lo sumo 0.25 unidades en cualquier direcci√≥n (horizontal y/o vertical).\n\n\n\n\n\n\n\n\n\n\n\nRetomando el ejemplo de los partos, aplicamos una transparencia de 0.25 y un nivel de perturbaci√≥n de 1 unidad en el sentido del eje X (es decir, sumamos o restamos 1 semana de gestaci√≥n al valor real):\n\n\n\n\n\n\n\n\n\n\n\nLa apariencia de este gr√°fico de dispersi√≥n es muy diferente en comparaci√≥n al que obtuvimos originalmente. Si bien el patr√≥n general se mantiene, ahora se aprecia un volumen mucho mayor de datos en la secci√≥n central del gr√°fico (recordemos que estamos analizando m√°s de 20.000 partos; en el gr√°fico original, se pueden apreciar a simple vista aproximadamente entre 350 y 600 puntos diferentes, dependiendo de la agudeza visual para distinguir diferencias en el sentido vertical).\nEl nivel de perturbaci√≥n aleatoria que se aplica debe ser lo suficientemente alto como para permitir la separaci√≥n de puntos, pero al mismo tiempo no ser tan elevado como para ‚Äúdesacomodar‚Äù la verdadera relaci√≥n entre variables.\nAclaraci√≥n: al ser aleatoria, la perturbaci√≥n aplicada genera diferentes versiones del mismo gr√°fico cada vez que se la vuelve a utilizar. Para replicar los resultados, debemos usar una semilla aleatoria espec√≠fica mediante set.seed().\n\n\n\n2.2.2 Hex√°gonos\n\nEstos gr√°ficos, tambi√©n conocidos como ‚Äúhistogramas 2D‚Äù, tratan de solucionar el problema de la superposici√≥n agrupando observaciones con valores similares en ambas dimensiones.\nSe divide al plano en m√∫ltiples hex√°gonos regulares de 6 lados, y luego se cuenta la cantidad de observaciones que existen dentro de cada hex√°gono. A cada uno se le asigna un color de acuerdo al volumen de datos que encierra:\n\n\n\n\n\n\n\n\n\n\n\nLa ventaja de este m√©todo es que no necesitamos modificar aleatoriamente los datos originales, como ocurre con el caso del jittering; de todas maneras, al agrupar (categorizar) observaciones continuas estamos perdiendo informaci√≥n.\nEn general se lo aplica cuando la soluci√≥n del jittering no es suficiente, es decir, cuando seguimos viendo ‚Äúmanchas‚Äù de puntos que no se distinguen unos de otros. En estos gr√°ficos no existe superposici√≥n, ya que cada hex√°gono posee su lugar correspondiente.\n\n\n\n2.2.3 Gr√°ficos de contorno\n\nUna √∫ltima alternativa consiste en crear gr√°ficos de contornos, en los cuales se realiza una estimaci√≥n de la funci√≥n de densidad bivariada definida por las variables X e Y. √Åreas del plano con igual nivel de densidad estimada se diferencian mediante l√≠neas de contorno, las cuales pueden estar coloreadas usando una paleta secuencial.\nNo todos los conjuntos de datos son adecuados para este tipo de gr√°ficos: para poder apreciarlos mejor, la densidad estimada debe crecer o decrecer lentamente en ambas direcciones.\nVeamos c√≥mo resulta el gr√°fico de contornos para el ejemplo de semanas de gestaci√≥n vs peso del beb√©:\n\n\n\n\n\n\n\n\n\n\n\nCon la escala utilizada, √°reas de colores ‚Äúfuertes‚Äù (amarillo, verde) se asocian a densidades m√°s elevadas, mientras que las tonalidades azules y violeta corresponden a sectores del plano con menor densidad de puntos.\nUn conjunto de datos con caracter√≠sticas que se aprovechan bien para un gr√°fico de contornos es volcano de R Base. Este dataset posee informaci√≥n topogr√°fica sobre el volc√°n Maungawhau ubicado en Nueva Zelanda.\nLas l√≠neas de contorno dan una idea del relieve del volc√°n; en vez de marcar densidad, ahora utilizamos esta herramienta para delimitar zonas con diferentes alturas sobre el nivel del mar:",
    "crumbs": [
      "Unidad 1. Introducci√≥n",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Buenas Pr√°cticas para la Visualizaci√≥n de Datos</span>"
    ]
  },
  {
    "objectID": "capitulos/01_buenas_practicas_visualizacion.html#colores",
    "href": "capitulos/01_buenas_practicas_visualizacion.html#colores",
    "title": "2¬† Buenas Pr√°cticas para la Visualizaci√≥n de Datos",
    "section": "2.3 Colores",
    "text": "2.3 Colores\n\nSi est√°n bien utilizados, los colores pueden ser herramientas muy efectivas a la hora de mejorar visualizaciones de datos. Al mismo tiempo, una mala elecci√≥n de colores puede arruinar completamente un gr√°fico.\nSea cual sea la paleta de colores que se use, el esquema elegido debe transmitir un mensaje claro, poseer un objetivo espec√≠fico y no distraer.\nA continuaci√≥n vamos a ver algunos casos de gr√°ficos donde el color est√° mal empleado.\n\n\n2.3.1 Muchos colores\n\nUn error com√∫n consiste en usar demasiados colores, como en el gr√°fico que se muestra a continuaci√≥n. Dado que cada observaci√≥n (en este caso, provincias argentinas) posee su propia tonalidad, la cantidad total de colores es muy elevada.\nEl trabajo de asociar a cada color con su respectiva provincia es un proceso que requiere de mucha atenci√≥n, lleva tiempo y es f√°cil caer en equivocaciones (provincias con colores similares son pr√°cticamente indistinguibles).\n\n\n\n\n\n\n\n\n\n\n\nLos colores deben ser usados para mejorar gr√°ficos y hacerlos de lectura m√°s f√°cil, no para crear ‚Äúacertijos visuales‚Äù donde el mensaje que se transmite termina siendo confuso.\nComo alternativas al gr√°fico anterior, mostramos dos posibilidades: una donde el color se asocia a otra variable cualitativa, y uno donde se reemplaza el color por etiquetas que brindan la informaci√≥n deseada:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEn general, el uso de colores para distinguir entre categor√≠as se recomienda cuando existen pocos grupos a graficar. Por ejemplo, las funciones de R que implementan las paletas creadas por Cynthia Brewer (paquete RColorBrewer) devuelven un mensaje de advertencia si usamos m√°s de 9 colores.\n\n\n\n2.3.2 Colores innecesarios\n\nA veces, quienes generan gr√°ficos sufren del s√≠ndrome de ‚ÄúArt Attack‚Äù y agregan detalles y colores que no suman al mensaje, sino m√°s bien que distraen. El gr√°fico de abajo es un claro ejemplo de ello:\n\n\n\n\n\n\n\n\n\n\n\nEn esta visualizaci√≥n, la paleta de colores no aporta informaci√≥n ni ayuda a entender mejor el mensaje transmitido; s√≥lo se usa para darle un toque colorido al gr√°fico. Si bien esto no es un problema grave en s√≠ mismo, podemos aprovechar el color de maneras m√°s eficientes, por ejemplo para distinguir entre regiones geogr√°ficas (como vimos anteriormente) o bien usando una escala secuencial que refuerce la idea de diferencias num√©ricas entre provincias.\n\n\n\n2.3.3 Escalas confusas\n\nCuando queremos emplear una gama de colores para recrear valores num√©ricos, es necesario definir paletas que tengan incrementos mon√≥tonos entre tonalidades. En general se eligen paletas de un solo color (por ej. verde claro a verde oscuro) o bien grupos de colores de una familia cercana (amarillos, naranjas, rojos).\nCuando esto no se cumple, las visualizaciones resultantes son confusas. Veamos un ejemplo usando la paleta arco√≠ris (rainbow), muy popular en R, pero poco √∫til en la pr√°ctica:\n\n\n\n\n\n\n\n\n\n\n\nEsta escala es circular: los colores ubicados en los extremos (rojo y rosa fuerte) son similares, lo cual resulta confuso ya que est√°n asociados a valores num√©ricos muy diferentes entre s√≠. Adem√°s, hay regiones de cambios r√°pidos (ej.: de amarillo a verde) y otras de cambios lentos (ej.: azules), lo cual hace que cantidades equidistantes entre s√≠ pueden estar representadas por colores muy parecidos o muy distintos, dependiendo de la zona del eje en que se ubiquen.\nPor todos estos motivos, las escalas de colores empleadas para representar valores num√©ricos deben ser mon√≥tonas y secuenciales. Por ejemplo:\n\n\n\n\n\n\n\n\n\n\n\nUn problema similar al anterior ocurre si usamos colores muy parecidos para representar categor√≠as:\n\n\n\n\n\n\n\n\n\n\n\nEn este caso, no s√≥lo hay dificultades porque las tonalidades son similares entre s√≠, sino que tambi√©n tenemos una superposici√≥n de puntos entre las especies versicolor y virginica. Asignar tonalidades que se distingan unas de otras ayuda a separar visualmente ambas categor√≠as:\n\n\n\n\n\n\n\n\n\n\n\n\n2.3.4 Paletas para personas dalt√≥nicas\n\nSi bien no existen estudios concluyentes al respecto, se estima que a nivel mundial, aproximadamente entre un 5% y 10% de los varones poseen alg√∫n grado de daltonismo, mientras que entre las mujeres la prevalencia se reduce a menos del 1%. El tipo de daltonismo m√°s com√∫n consiste en la incapacidad de distinguir correctamente las tonalidades rojas de las verdes, aunque hay personas con daltonismo asociado a otros colores (azul y verde, etc.).\nTeniendo en cuenta esto, hay paletas creadas espec√≠ficamente para que personas con daltonismo puedan distinguir f√°cilmente los colores empleados. Un ejemplo es la paleta de Okabe-Ito:\n\n\n\n\n\n\n\n\n\n\n\nComo alternativa, tenemos la paleta PiYG de Brewer (llamada original abajo). A su lado vemos c√≥mo la visualizar√≠an personas con diferentes tipos de daltonismo; todas las versiones siguen siendo f√°cilmente distinguibles:\n\n\n\n\n\n\n\n\n\n\nFuente: Fundamentals of Data Visualization - Claus Wilke\n\n\n\n\n\n\n\nSi usamos otras paletas, lo anterior puede no ocurrir y la diferencia entre cada grupo queda oculta para la persona con daltonismo:\n\n\n\n\n\n\n\n\n\n\nFuente: Fundamentals of Data Visualization - Claus Wilke\n\n\n\n\n\n\n\nPor lo tanto, si nuestros gr√°ficos van a ser consumidos por un p√∫blico extenso, es buena idea emplear paletas que tengan en cuenta estos detalles.\n\n\n\n2.3.5 Blanco y negro\n\nSiempre que el contexto lo permita, debemos tratar de evitar crear gr√°ficos en blanco y negro. Rellenar figuras (boxplots, barras, etc.) con alg√∫n color s√≥lido hace que estas se destaquen mejor contra el fondo del gr√°fico, permitiendo una interpretaci√≥n m√°s inmediata de las cantidades representadas y, de paso, convirtiendo la visualizaci√≥n en un objeto visualmente m√°s agradable.\nClaus Wilke argumenta que la costumbre de no usar colores proviene de los primeros software de visualizaci√≥n de datos, los cuales intentaban emular de manera precisa el aspecto de los gr√°ficos hechos a mano por los cient√≠ficos. En estos gr√°ficos los colores muchas veces brillaban por su ausencia, o bien eran usados para crear un patr√≥n de relleno no s√≥lido (a rayas, con puntos, etc.).\nPor otro lado, debemos tener en cuenta que durante mucho tiempo la comunicaci√≥n de la ciencia se hizo casi exclusivamente en formato papel, y todos sabemos que imprimir a color es siempre m√°s costoso que hacerlo en blanco y negro. Hoy en d√≠a, donde la gran mayor√≠a de los gr√°ficos existen de manera digital, no hay justificaci√≥n para evitar el uso de colores, m√°s all√° de un criterio minimalista que puede ser empleado por razones puramente est√©ticas.\nA continuaci√≥n vamos a ver algunos ejemplos de gr√°ficos sin color y sus potenciales problemas.\nGr√°fico de barras: las barras blancas sobre fondo blanco pueden llegar a crear una ilusi√≥n √≥ptica que perjudica la c√≥moda visualizaci√≥n del gr√°fico:\n\n\n\n\n\n\n\n\n\n\n\nDensidades: la superposici√≥n de las curvas y la necesidad de diferenciar grupos hacen necesaria la presencia de colores. Si tenemos que limitarnos al blanco y negro, debemos recurrir a est√©ticas no muy efectivas (como tipo de l√≠nea) para identificar a cada grupo. Algo similar ocurre con los gr√°ficos de dispersi√≥n: si no podemos asociar categor√≠as con colores, deberemos conformarnos con usar diferentes formas para cada una.",
    "crumbs": [
      "Unidad 1. Introducci√≥n",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Buenas Pr√°cticas para la Visualizaci√≥n de Datos</span>"
    ]
  },
  {
    "objectID": "capitulos/01_buenas_practicas_visualizacion.html#leyendas",
    "href": "capitulos/01_buenas_practicas_visualizacion.html#leyendas",
    "title": "2¬† Buenas Pr√°cticas para la Visualizaci√≥n de Datos",
    "section": "2.4 Leyendas",
    "text": "2.4 Leyendas\n\nSiempre que en nuestros gr√°ficos tengamos est√©ticas asociadas a colores, formas, tama√±os o tipos de l√≠nea, necesitamos incluir leyendas (o escalas) que aclaren c√≥mo esa est√©tica se relaciona con la variable que representa.\nA continuaci√≥n vemos un gr√°fico que muestra la evoluci√≥n del PBI en 4 pa√≠ses diferentes. Los datos fueron extra√≠dos del paquete gapminder:\n\n\n\n\n\n\n\n\n\n\n\n¬øEst√°n de acuerdo con el orden alfab√©tico presente en la leyenda de arriba? ¬øPodr√≠a mejorarse de alguna manera este gr√°fico, haciendo que sea m√°s f√°cil de entender?\nEn casos donde hay un orden distinguible entre los valores representados, y la variable categ√≥rica asociada es nominal (sin orden intr√≠nseco), se recomienda reordenar los niveles de la leyenda de manera que coincidan con el orden num√©rico. De esta manera, la relaci√≥n que nuestro cerebro aplica para asociar colores con categor√≠as es mucho m√°s inmediata y natural:\n\n\n\n\n\n\n\n\n\n\n\nPor otro lado, las leyendas deben respetar el orden de las variables categ√≥ricas ordinales:\n\n\n\n\n\n\n\n\n\n\n\nMuchas veces las leyendas pueden ser reemplazadas por textos o anotaciones que se ubican dentro del gr√°fico. Esto puede deberse a cuestiones de espacio (en general las leyendas ocupan mucho lugar y es necesario achicar el tama√±o destinado al gr√°fico en s√≠ mismo), de est√©tica o bien para remarcar ciertas diferencias entre grupos de observaciones.\nEjemplo para la evoluci√≥n del PBI:",
    "crumbs": [
      "Unidad 1. Introducci√≥n",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Buenas Pr√°cticas para la Visualizaci√≥n de Datos</span>"
    ]
  },
  {
    "objectID": "capitulos/01_buenas_practicas_visualizacion.html#paneles",
    "href": "capitulos/01_buenas_practicas_visualizacion.html#paneles",
    "title": "2¬† Buenas Pr√°cticas para la Visualizaci√≥n de Datos",
    "section": "2.5 Paneles",
    "text": "2.5 Paneles\n\nCuando los conjuntos de datos que estamos analizando contienen un gran volumen de informaci√≥n, tratar de visualizar muchos aspectos en unos pocos gr√°ficos puede ser contraproducente. En general, las visualizaciones resultantes est√°n muy cargadas de informaci√≥n y son complejas de interpretar.\nPara evitar este inconveniente podemos usar paneles que repliquen los gr√°ficos construidos en distintos subgrupos de la poblaci√≥n, o bien que estructuren de forma ordenada los an√°lisis exploratorios llevados a cabo sobre cada variable.\n\n\n2.5.1 Subgrupos\n\nSea cual sea el gr√°fico elegido para representar las variables de nuestro conjunto de datos, muchas veces resulta interesante ver c√≥mo las relaciones entre estas variables dependen (o no) de diferentes subgrupos de la poblaci√≥n que estamos estudiando.\nSi la cantidad de subgrupos es moderadamente elevada, incluir todas las comparaciones en un solo lugar puede ser una mala idea. Los paneles nos ayudan a emprolijar y hacer m√°s entendibles nuestros gr√°ficos, replicando los an√°lisis y ubic√°ndolos en una grilla.\nVeamos un ejemplo donde creamos diagramas de dispersi√≥n para las variables PBI per c√°pita y esperanza de vida de varios pa√≠ses, con un ajuste LOESS para cada a√±o por separado. Este tipo de gr√°fico ser√≠a pr√°cticamente imposible de armar en una figura que no use paneles (tambi√©n llamados trellis plots o faceting en la literatura):\n\n\n\n\n\n\n\n\n\n\n\nEjemplos comunes de faceting tambi√©n se dan con histogramas, curvas de densidad, boxplots, gr√°ficos de barra, etc. A continuaci√≥n vemos boxplots de peso del reci√©n nacido para subgrupos de la poblaci√≥n conformados por el cruce entre 2 variables: tipo de parto (columnas) y semanas de gestaci√≥n (filas):\n\n\n\n\n\n\n\n\n\n\n\nSi bien podr√≠amos haber armado un √∫nico gr√°fico con 9 cajas, una por cada subgrupo, la ubicaci√≥n espacial en una grilla como la de arriba facilita la interpretaci√≥n de los resultados.\nLo importante en este tipo de visualizaciones es mantener constante las escalas de los ejes a lo largo de todos los paneles. Adaptar los l√≠mites a cada subgrupo en particular es totalmente enga√±oso, y debe ser evitado a toda costa.\nTambi√©n es importante que la ubicaci√≥n de los gr√°ficos en la grilla conserve un orden l√≥gico. En el primer caso analizado, los a√±os se suceden en orden ascendente de izquierda a derecha y de arriba hacia abajo. Si bien existen otras maneras de ordenarlos, estamos acostumbrados a que el panel de arriba a la izquierda sea el primero y el de abajo a la derecha, el √∫ltimo en nuestra recorrida visual. Lo mismo aplica para variables categ√≥ricas ordinales, como en el caso de la variable edad_gestacional del dataset de partos.\n\n\n\n2.5.2 Paneles para m√∫ltiples visualizaciones\n\nEl otro uso de los paneles consiste en ver muchos gr√°ficos distintos, independientes entre s√≠, en un solo lugar. En estos casos es vital que los colores, tama√±os y apariencia general sean homog√©neas, para que ning√∫n panel en particular se robe la atenci√≥n. Si asignamos ciertos colores a determinados subgrupos de la poblaci√≥n, debemos mantener ese mapeo a lo largo de todos los gr√°ficos presentados.\nEjemplo: boxplots para peso del reci√©n nacido y evoluci√≥n temporal de la cantidad de partos, seg√∫n sexo del beb√©:\n\n\n\n\n\n\n\n\n\n\n\nEl gr√°fico de arriba tiene varios problemas: las est√©ticas no son compatibles (uno usa un fondo gris con marcas de eje azules, mientras que el otro posee un fondo blanco con letras negras); adem√°s, los colores asignados a cada nivel no se mantienen constantes y pueden llegar a confundir al p√∫blico, los tama√±os no son uniformes, etc.\nDebajo vemos una versi√≥n mejorada:\n\n\n\n\n\n\n\n\n\n\n\nCuando la cantidad de informaci√≥n visualizada es abundante, resulta importante aclarar bien qu√© variable(s) estamos viendo en cada panel. En este sentido, el paquete GGally es de gran utilidad, a trav√©s de su funci√≥n ggpairs():",
    "crumbs": [
      "Unidad 1. Introducci√≥n",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Buenas Pr√°cticas para la Visualizaci√≥n de Datos</span>"
    ]
  },
  {
    "objectID": "capitulos/01_buenas_practicas_visualizacion.html#grillas",
    "href": "capitulos/01_buenas_practicas_visualizacion.html#grillas",
    "title": "2¬† Buenas Pr√°cticas para la Visualizaci√≥n de Datos",
    "section": "2.6 Grillas",
    "text": "2.6 Grillas\n\nLlamamos grillas a las rectas perpendiculares a los ejes que se dibujan en el fondo del gr√°fico para facilitar la interpretaci√≥n del mismo, espec√≠ficamente, a la hora de comparar valores entre diferentes observaciones o grupos representados.\nSi bien constituyen un elemento muy importante de varios tipos de gr√°ficos, muchas veces no son empleadas debidamente, o ni siquiera se las incluye. A continuaci√≥n veremos algunos ejemplos de buenos y malos usos de grillas.\nRetomando el ejemplo de evoluci√≥n del PBI per c√°pita para ciertos pa√≠ses, veamos 4 maneras diferentes de aplicar grillas:\n\n\n\n\n\n\n\n\n\n\n\nAnalicemos este gr√°fico:\n\nPanel (a): no se incluye grilla. Comparar valores se hace visualmente dificultoso. El gr√°fico en s√≠ mismo no es ‚Äúincorrecto‚Äù, pero se puede mejorar.\nPanel (b): se incluye grilla, pero es demasiado llamativa y opaca los datos de inter√©s. El grosor y la tonalidad de la grilla no deben competir con los usados para los elementos principales del gr√°fico.\nPanel (c): esta es la opci√≥n preferida. Se incluye una grilla en tono gris claro que facilita la interpretaci√≥n de los valores mostrados en el gr√°fico, sin crear una distracci√≥n como en el panel (b).\nPanel (d): si bien los colores de la grilla son v√°lidos, el problema en este caso es la cantidad innecesaria de l√≠neas utilizadas. Usar una grilla demasiado densa tambi√©n distrae y puede llegar a ocultar el mensaje principal del gr√°fico.\n\n\n\n\n\nUn caso especial del uso de grillas se da cuando existe un valor ‚Äúbase‚Äù o ‚Äúneutro‚Äù que sirve de punto de comparaci√≥n para los valores representados en el gr√°fico.\nPor ejemplo, veamos el cambio porcentual en el PBI de Argentina para el per√≠odo 1957-2007. Es natural tratar de ver si entre una medici√≥n y la siguiente, el PBI subi√≥ (variaci√≥n mayor a 0) o baj√≥ (menor a 0). Adem√°s de trazar la grilla original, se dibuja una l√≠nea recta horizontal que corta el eje Y a la altura del 0, reforzando su ubicaci√≥n y permitiendo una interpretaci√≥n m√°s directa del gr√°fico.\n\n\n\n\n\n\n\n\n\n\n\nAlgo similar hacemos cuando, en un diagrama de dispersi√≥n, se espera que ambas variables sean iguales: en vez de trazar una recta perpendicular a alguno de los ejes, dibujando la recta identidad que demarca la relaci√≥n \\(x=y\\). Uno de los ejemplos m√°s comunes de esto son los gr√°ficos de cuantiles (q-q plots).",
    "crumbs": [
      "Unidad 1. Introducci√≥n",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Buenas Pr√°cticas para la Visualizaci√≥n de Datos</span>"
    ]
  },
  {
    "objectID": "capitulos/01_buenas_practicas_visualizacion.html#d",
    "href": "capitulos/01_buenas_practicas_visualizacion.html#d",
    "title": "2¬† Buenas Pr√°cticas para la Visualizaci√≥n de Datos",
    "section": "2.7 3D",
    "text": "2.7 3D\n\nUno de los peores males que aquejan el mundo de la visualizaci√≥n de datos, junto con los gr√°ficos de torta, son los gr√°ficos 3D de datos originalmente 2D.\nExcel es una herramienta que permite hacer este tipo de monstruosidad de manera relativamente sencilla, y su uso se ha extendido de tal manera que hoy en d√≠a es muy com√∫n ver gr√°ficos 3D en contextos supuestamente serios (finanzas, academia, etc.).\nLas cr√≠ticas hacia el uso de efectos 3D son muchas y est√°n bien fundamentadas. Veamos las principales:\n\nNo aportan nada nuevo. Un gr√°fico de torta o barras 3D muestra exactamente la misma informaci√≥n que su versi√≥n original en 2D. Su uso es puramente ‚Äúest√©tico‚Äù.\nLa mayor√≠a de las veces enga√±an y confunden. El uso de estos efectos distorsiona las cantidades reales representadas en el gr√°fico, y el mensaje final depende del √°ngulo elegido para la visualizaci√≥n.\n\n\n\n\n\nVeamos c√≥mo afecta el 3D a un gr√°fico de torta: a medida que rotamos el √°ngulo desde el cual vemos el gr√°fico, la porci√≥n m√°s peque√±a (25%) puede volverse artificialmente grande, enviando un mensaje contradictorio al espectador del gr√°fico.\n\n\n\n\n\n\n\n\n\n\nFuente: Fundamentals of Data Visualization - Claus Wilke\n\n\n\n\n\n\nSin embargo, lo peor est√° por venir: veamos ahora c√≥mo impacta el efecto 3D sobre un gr√°fico de barras.\nLa siguiente figura fue construida usando Excel. Los datos originales representan tres grupos con los siguientes valores: 10, 5 y 12 (panel de la izquierda). La versi√≥n por defecto que ofrece Excel cuando se elige un gr√°fico 3D para esos mismos datos se muestra en el panel derecho.\n\n\n\n\n\n\n\n\n\n\n\n¬øPor qu√© la altura de cada barra no coincide con su valor correspondiente? ¬øPor qu√© el software m√°s popular para almacenamiento de datos construye por defecto gr√°ficos literalmente err√≥neos? ¬øPor qu√©? No hay por qu√©.\nNo vamos a perder m√°s tiempo de clase mirando figuras con efetos 3D innecesarios. Consideramos que estos dos ejemplos deber√≠an ser suficientes para desmotivar a cualquier persona que est√© considerando el uso de este tipo de gr√°ficos.",
    "crumbs": [
      "Unidad 1. Introducci√≥n",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Buenas Pr√°cticas para la Visualizaci√≥n de Datos</span>"
    ]
  },
  {
    "objectID": "capitulos/01_buenas_practicas_visualizacion.html#comentarios-finales",
    "href": "capitulos/01_buenas_practicas_visualizacion.html#comentarios-finales",
    "title": "2¬† Buenas Pr√°cticas para la Visualizaci√≥n de Datos",
    "section": "2.8 Comentarios finales",
    "text": "2.8 Comentarios finales\n\nExisten much√≠simos otros detalles de un gr√°fico que pueden salir mal, pero dedicarle a cada uno su propia secci√≥n nos llevar√≠a demasiado tiempo. A continuaci√≥n vamos a mencionar 2 de los m√°s importantes:\n\n\n2.8.1 Contexto\n\nTodo gr√°fico debe estar bien contextualizado. Esto implica que debemos asegurarnos de incluir un t√≠tulo general, t√≠tulos de los ejes y leyendas, escalas utilizadas, unidades de medida de las variables representadas, etc. De ser necesario, tambi√©n debemos indicar el per√≠odo temporal analizado, las fuentes de informaci√≥n, y cualquier otro detalle importante que ayude a contextualizar mejor el mensaje que queremos transmitir.\nEste √∫ltimo consejo se vuelve mucho m√°s importante cuando la figura se publica de manera independiente o solitaria: no es lo mismo contextualizar un gr√°fico incluido en el anexo de una tesis, donde las caracter√≠sticas de los datos ya han sido descritas detalladamente, que hacerlo cuando el medio de comunicaci√≥n empleado es alguna red social.\n\n\n\n2.8.2 Tama√±o\n\nCuando creamos una visualizaci√≥n debemos cuidar que el tama√±o de los textos, puntos, barras o formas utilizadas sean legibles y tambi√©n uniformes. Puede ser confuso (y hasta molesto) analizar un gr√°fico donde la etiqueta del eje X est√° escrita en un tama√±o de fuente mayor que el t√≠tulo principal, o bien cuando diferentes ejes poseen diferentes tama√±os de texto.\nCon respecto al tama√±o elegido, debemos pensar en qu√© lugar o por qu√© medio se publicar√°n los gr√°ficos que estamos construyendo: ¬øel p√∫blico acceder√° a estos gr√°ficos a trav√©s de un medio digital (PC, celular, etc.) en el cual es posible hacer zoom, o el resultado final se ver√° impreso en papel?\nSi el gr√°fico es est√°tico, es muy importante chequear que el tama√±o de letra empleado se traslade bien al papel o documento de salida; caso contrario el gr√°fico ser√° ininteligible y el mensaje se pierde. Con respecto a esto, debemos tener en cuenta que el tama√±o de las letras de un gr√°fico como se ven en RStudio no necesariamente va a coincidir con el tama√±o de las letras luego de la exportaci√≥n de la imagen.",
    "crumbs": [
      "Unidad 1. Introducci√≥n",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Buenas Pr√°cticas para la Visualizaci√≥n de Datos</span>"
    ]
  },
  {
    "objectID": "capitulos/01_introduccion_a_ggplot2.html",
    "href": "capitulos/01_introduccion_a_ggplot2.html",
    "title": "3¬† Introducci√≥n a ggplot2",
    "section": "",
    "text": "3.1 Introducci√≥n\nlibrary(ggplot2)\nmsleep\n\n# A tibble: 83 √ó 11\n   name   genus vore  order conservation sleep_total sleep_rem sleep_cycle awake\n   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;              &lt;dbl&gt;     &lt;dbl&gt;       &lt;dbl&gt; &lt;dbl&gt;\n 1 Cheet‚Ä¶ Acin‚Ä¶ carni Carn‚Ä¶ lc                  12.1      NA        NA      11.9\n 2 Owl m‚Ä¶ Aotus omni  Prim‚Ä¶ &lt;NA&gt;                17         1.8      NA       7  \n 3 Mount‚Ä¶ Aplo‚Ä¶ herbi Rode‚Ä¶ nt                  14.4       2.4      NA       9.6\n 4 Great‚Ä¶ Blar‚Ä¶ omni  Sori‚Ä¶ lc                  14.9       2.3       0.133   9.1\n 5 Cow    Bos   herbi Arti‚Ä¶ domesticated         4         0.7       0.667  20  \n 6 Three‚Ä¶ Brad‚Ä¶ herbi Pilo‚Ä¶ &lt;NA&gt;                14.4       2.2       0.767   9.6\n 7 North‚Ä¶ Call‚Ä¶ carni Carn‚Ä¶ vu                   8.7       1.4       0.383  15.3\n 8 Vespe‚Ä¶ Calo‚Ä¶ &lt;NA&gt;  Rode‚Ä¶ &lt;NA&gt;                 7        NA        NA      17  \n 9 Dog    Canis carni Carn‚Ä¶ domesticated        10.1       2.9       0.333  13.9\n10 Roe d‚Ä¶ Capr‚Ä¶ herbi Arti‚Ä¶ lc                   3        NA        NA      21  \n# ‚Ñπ 73 more rows\n# ‚Ñπ 2 more variables: brainwt &lt;dbl&gt;, bodywt &lt;dbl&gt;",
    "crumbs": [
      "Unidad 1. Introducci√≥n",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Introducci√≥n a `ggplot2`</span>"
    ]
  },
  {
    "objectID": "capitulos/01_introduccion_a_ggplot2.html#introducci√≥n",
    "href": "capitulos/01_introduccion_a_ggplot2.html#introducci√≥n",
    "title": "3¬† Introducci√≥n a ggplot2",
    "section": "",
    "text": "En R existen tres sistemas para realizar gr√°ficos: base, lattice y ggplot2.\n\nSistema base: viene con la instalaci√≥n b√°sica de R y es el m√°s limitado en cuanto a su potencial. Permite crear gr√°ficos simples, de manera r√°pida y sencilla, lo cual resulta muy √∫til para an√°lisis exploratorios que no requieran de mucha complejidad.\nSistema lattice: est√° implementado en el paquete hom√≥nimo, el cual tambi√©n viene con la instalaci√≥n b√°sica de R. Este sistema a√±ade mucha m√°s flexibilidad, pero su sintaxis es poco intuitiva y no muy clara. Si bien tuvo su pico de popularidad hace algunos a√±os, cuando era la √∫nica alternativa al sistema base, hoy en d√≠a lattice ha quedado algo obsoleto.\nSistema ggplot2: ofrece la posibilidad de generar figuras de alta calidad y sumamente flexibles, bas√°ndose en desarrollos te√≥ricos del campo de la visualizaci√≥n. Forma parte del tidyverse, un conjunto de paquetes de R que han revolucionado la programaci√≥n orientada a ciencia de datos.\n\nDebajo vemos diagramas de dispersi√≥n b√°sicos realizados con los tres sistemas nombrados (de izquierda a derecha: base, lattice y ggplot2). Todos los gr√°ficos poseen el mismo tama√±o; notemos c√≥mo ggplot2 hace un uso casi total del √°rea disponible, mientras que el sistema base posee por defecto m√°rgenes muy extensos:\n\n\n\nA lo largo de este material vamos a usar un conjunto de datos que ofrece ggplot2 llamado msleep, el cual presenta datos sobre caracter√≠sticas del sue√±o de 83 especies de mam√≠feros.\nEjecutando data(msleep) cargamos estos datos en nuestro ambiente de trabajo:",
    "crumbs": [
      "Unidad 1. Introducci√≥n",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Introducci√≥n a `ggplot2`</span>"
    ]
  },
  {
    "objectID": "capitulos/01_introduccion_a_ggplot2.html#el-sistema-ggplot2",
    "href": "capitulos/01_introduccion_a_ggplot2.html#el-sistema-ggplot2",
    "title": "3¬† Introducci√≥n a ggplot2",
    "section": "3.2 El sistema ggplot2",
    "text": "3.2 El sistema ggplot2\n\n\n\n\n\n\n\n\n\n\ngg viene de Grammar of Graphics (gram√°tica de gr√°ficos), un libro escrito por Leland Wilkinson en 1999, donde hace un desarrollo te√≥rico para la construcci√≥n de gr√°ficos.\n\n\n\n\n\n\n\n\n\n\n\nAs√≠ como la gram√°tica de un lenguaje estudia la estructura de las palabras, la manera en que estas se combinan y las reglas que hay que seguir para formar oraciones, la gram√°tica de gr√°ficos de Wilkinson provee un sistema para combinar elementos gr√°ficos que dan como resultado figuras visualmente significativas.\nEste sistema se convirti√≥ en la inspiraci√≥n de muchas aplicaciones gr√°ficas populares, como Polaris de Tableau, Vega-Lite, plotnine de Python, etc.\nHadley Wickham (CEO de RStudio) fue uno de los primeros en implementar este sistema en un lenguaje de computaci√≥n, con algunas variantes, cuando cre√≥ el paquete de R ggplot2.\nLa idea fundamental es pensar a un gr√°fico como una superposici√≥n de elementos que lo componen, llamadas capas o layers:\n\n\n\n\n\n\n\n\n\n\n\nDatos (data): es el dataset que queremos representar. Debe estar almacenado en formato ordenado (tidy), es decir, con un individuo por fila y una variable por columna.\nMapeo est√©tico (aesthetic mapping): describe c√≥mo las variables en el dataset se vinculan con las est√©ticas (caracter√≠sticas visuales) de un gr√°fico. Por ejemplo, esta capa nos permite definir cu√°l es la variable que va en la est√©tica de posici√≥n del eje horizontal, cu√°l en la posici√≥n del eje vertical, si se utilizar√° alguna est√©tica de color, forma, tama√±o, etc. El mapeo est√©tico logra que todas las capas del gr√°fico queden interrelacionadas.\nGeometr√≠as (geometries, geoms): definen la manera en que los datos se representan en el gr√°fico: a trav√©s de puntos, l√≠neas, barras, etc. Determinan el aspecto principal del gr√°fico.\nEscalas (scales): controlan los detalles de la asociaci√≥n biun√≠voca establecida entre los datos y la est√©tica en cuesti√≥n. Usamos estas capas si queremos cambiar las configuraciones por default, por ejemplo, los l√≠mites de los ejes en las est√©ticas de posici√≥n, los colores asignados a cada grupo en una est√©tica de color, etc.\nEstad√≠sticas (stats): transforman las variables de entrada para mostrar estad√≠sticas resumen o resultados de m√©todos estad√≠sticos, por ejemplo, una recta ajustada.\nPaneles (facet): permite dividir el gr√°fico original en varios paneles distintos, uno para cada grupo posible definido por cierta variable categ√≥rica o discreta.\nCoordenadas (coordinates): determinan el sistema de coordenadas que emplea el gr√°fico para representar los datos. El default es el sistema de coordenadas cartesianas, requerido por la mayor√≠a de los gr√°ficos que utilizamos. Este conjunto de capas permite aplicar transformaciones (por ejemplo, usar escalas logar√≠tmicas), trasponer el sistema (intercambiar ejes X e Y), fijar la relaci√≥n de aspecto de las unidades en los ejes, etc., o directamente optar por otros sistemas de coordenadas como las polares.\nEstilos (themes): controlan el aspecto general del gr√°fico en cuestiones que no tienen que ver con los datos, por ejemplo, si queremos el t√≠tulo en negrita o el fondo blanco. Es decir, controla la parte est√©tica (en el sentido usual de la palabra) o lo que se conoce como ‚Äútinta libre de datos‚Äù (non-data ink).\n\n\n\n\n\n\n\nAplicaci√≥n\n\n\n\nA continuaci√≥n, construiremos paso a paso un diagrama de dispersi√≥n entre las variables cantidad total de horas de sue√±o (sleep_total) y la cantidad de horas de sue√±o en la fase REM (sleep_rem), presentes en el dataset sobre patrones de sue√±o de animales mam√≠feros.\n\n\n\n3.2.1 data, mapping & geom\n\nUn gr√°fico se inicia con la funci√≥n ggplot(), en la que se indica cu√°l es el conjunto de datos a emplear.\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = msleep)\n\n\n\n\n\n\n\n\n\nAl correr esto podemos apreciar en el panel de Gr√°ficos c√≥mo nuestro lienzo se prepara para que pintemos algo sobre √©l, pero todav√≠a no muestra nada. Es porque a√∫n nos falta se√±alar otras capas esenciales, por ejemplo, la del mapeo.\n\n\n\n\n\n\n\n\n\n\n\nDado que queremos hacer un diagrama de dispersi√≥n de sleep_total vs sleep_rem, vamos a mapear la variable sleep_rem al elemento de mapeo \\(x\\) y la variable sleep_total al elemento de mapeo \\(y\\).\nEsto se hace sumando una capa al c√≥digo inicial, con el operador +. Esta capa consiste en invocar a la funci√≥n aes(), dentro de la cual elegimos los elementos de mapeo que nos interesan.\n\n\nggplot(data = msleep) +\n  aes(x = sleep_rem, y = sleep_total)\n\n\n\n\n\n\n\n\n\nLa cosa va tomando forma: al menos ahora podemos ver que las variables fueron mapeadas tal como lo planeamos.\nSin embargo, el gr√°fico est√° vac√≠o porque a pesar de que elegimos qu√© poner en cada eje, no indicamos c√≥mo queremos que aparezcan los datos.\nNos falta un tercer elemento esencial, un geometry. Sin al menos una capa con un geometry no tendremos ninguna visualizaci√≥n.\nPor ejemplo, para un gr√°fico de dispersi√≥n, lo que necesitamos son puntos:\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = msleep) +\n  aes(x = sleep_rem, y = sleep_total) +\n  geom_point()\n\n\n\n\n\n\n\n\n\n¬°Ya tenemos listo nuestro primer gr√°fico con ggplot2! Lo mostrado hasta aqu√≠ es la base, lo que no puede faltar; a partir de ahora podemos considerar incluir o no los restantes elementos.\nProbemos agregar un mapeo adicional. Por ejemplo, si queremos que el color de los puntos est√© mapeado a la variable vore (tipo de alimentaci√≥n: herb√≠voro, carn√≠voro, etc.), debemos agregar la opci√≥n color = vore en la capa de est√©ticas.\nDe esta manera asociamos el color de todos nuestros geoms con la variable vore, y adem√°s se crea autom√°ticamente la leyenda correspondiente:\n\n\nggplot(data = msleep) +\n  aes(x = sleep_rem, y = sleep_total, color = vore) +\n  geom_point()\n\n\n\n\n\n\n\n\n\n\n3.2.2 scales\n\nSi ahora queremos modificar las configuraciones elegidas por default para cada uno de los mapeos, necesitamos invocar a las capas de scales:\n\n\n\n\n\n\n\n\n\n\n\nPor ejemplo, modificamos l√≠mites, nombres de los ejes y la paleta de colores:\n\n\nggplot(data = msleep) +\n  aes(x = sleep_rem, y = sleep_total, color = vore) +\n  geom_point() +\n  scale_x_continuous(name = \"Sue√±o REM (horas)\") +\n  scale_y_continuous(\n    name = \"Sue√±o total (horas)\", \n    limits = c(0, 25), \n    breaks = seq(0, 25, 5)\n    ) +\n  scale_color_brewer(name = \"Alimentaci√≥n\", palette = \"Dark2\", na.value = \"black\")\n\n\n\n\n\n\n\n\n\n\n3.2.3 stats\n\nPodemos agregar una nueva capa con un elemento de tipo stats, por ejemplo para agregar una recta de regresi√≥n lineal simple (esto s√≥lo es un ejemplo, deber√≠amos evaluar si es adecuado ajustar este tipo de modelo o no).\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = msleep) +\n  aes(x = sleep_rem, y = sleep_total, color = vore) +\n  geom_point() +\n  scale_x_continuous(name = \"Sue√±o REM (horas)\") +\n  scale_y_continuous(\n    name = \"Sue√±o total (horas)\", \n    limits = c(0, 25), \n    breaks = seq(0, 25, 5)\n    ) +\n  scale_color_brewer(name = \"Alimentaci√≥n\", palette = \"Dark2\", na.value = \"black\") +\n  stat_smooth(method = \"lm\", se = FALSE)\n\n\n\n\n\n\n\n\n\nComo en el gr√°fico ya existe el mapeo entre el color y la categor√≠a, vemos que autom√°ticamente tenemos una recta de regresi√≥n para cada grupo.\nSi quisi√©ramos una √∫nica recta para todos los datos, tendr√≠amos que hacerlo de la siguiente forma (la diferencia es muy sutil pero importante):\n\n\nggplot(data = msleep) +\n  aes(x = sleep_rem, y = sleep_total) +\n  geom_point(mapping = aes(color = vore)) +\n  scale_x_continuous(name = \"Sue√±o REM (horas)\") +\n  scale_y_continuous(\n    name = \"Sue√±o total (horas)\", \n    limits = c(0, 25), \n    breaks = seq(0, 25, 5)\n    ) +\n  scale_color_brewer(name = \"Alimentaci√≥n\", palette = \"Dark2\", na.value = \"black\") +\n  stat_smooth(method = \"lm\", se = FALSE)\n\n\n\n\n\n\n\n\n\n\n3.2.4 facets\n\nUn elemento de tipo facet crear√° un panel distinto para cada categor√≠a de la variable indicada:\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = msleep) +\n  aes(x = sleep_rem, y = sleep_total) +\n  geom_point() +\n  scale_x_continuous(name = \"Sue√±o REM (horas)\") +\n  scale_y_continuous(\n    name = \"Sue√±o total (horas)\", \n    limits = c(0, 25), \n    breaks = seq(0, 25, 5)\n    ) +\n  scale_color_brewer(name = \"Alimentaci√≥n\", palette = \"Dark2\", na.value = \"black\") +\n  stat_smooth(method = \"lm\", se = FALSE) +\n  facet_wrap(~ vore)\n\n\n\n\n\n\n\n\n\n\n3.2.5 coordinates\n\nPara ejemplificar las modificaciones al sistema de coordenadas aplicaremos una transformaci√≥n logar√≠tmica, que en este caso puede servir para visualizar mejor la relaci√≥n entre las horas de sue√±o y el peso corporal, ya que esta √∫ltima posee una distribuci√≥n muy asim√©trica:\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = msleep) +\n  aes(x = bodywt, y = sleep_total) +\n  geom_point()\n\n\n\n\n\n\n\n\n\nIndicando que deseamos calcular logaritmos en base 10, el nuevo gr√°fico resulta:\n\n\nggplot(data = msleep) +\n  aes(x = bodywt, y = sleep_total) +\n  geom_point() +\n  coord_trans(x = \"log10\") +\n  scale_x_continuous(\n    name = \"Peso corporal (kg.)\", \n    breaks = c(0.005, 1, 10, 100, 1000),\n    labels = c(0.005, 1, 10, 100, 1000)\n    )\n\n\n\n\n\n\n\n\n\n\n3.2.6 themes\n\nFinalmente podemos modificar el aspecto general con una o varias capas de estilo (hay estilos predefinidos o personalizados, por ejemplo los de ggthemes o ggthemr):\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = msleep) +\n  aes(x = sleep_rem, y = sleep_total) +\n  geom_point() +\n  scale_x_continuous(name = \"Sue√±o REM (horas)\") +\n  scale_y_continuous(\n    name = \"Sue√±o total (horas)\", \n    limits = c(0, 25), \n    breaks = seq(0, 25, 5)\n    ) +\n  scale_color_brewer(name = \"Alimentaci√≥n\", palette = \"Dark2\", na.value = \"black\") +\n  stat_smooth(method = \"lm\", se = FALSE) +\n  facet_wrap(~ vore) +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEjercicio\n\n\n\nReproducir el siguiente gr√°fico que analiza las horas diarias de sue√±o seg√∫n el tipo de alimentaci√≥n de cada mam√≠fero, a trav√©s de histogramas:\n\n\n\n\n\n\n\n\n\n\nConsejo: avanzar de a poco, aprovechando el estilo de construcci√≥n gradual de ggplot2: comenzar por lo m√°s importante (que aparezca un histograma), seguido de lo intermedio (que aparezcan paneles), dejando para el final los detalles (ejes, colores).\nAyuda: el geom a usar es geom_histogram (ver argumento breaks para determinar los l√≠mites de cada barra). El t√≠tulo se puede colocar con la capa ggtitle() o bien con la capa labs()",
    "crumbs": [
      "Unidad 1. Introducci√≥n",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Introducci√≥n a `ggplot2`</span>"
    ]
  },
  {
    "objectID": "capitulos/01_introduccion_a_ggplot2.html#nociones-√∫tiles-sobre-ggplot2",
    "href": "capitulos/01_introduccion_a_ggplot2.html#nociones-√∫tiles-sobre-ggplot2",
    "title": "3¬† Introducci√≥n a ggplot2",
    "section": "3.3 Nociones √∫tiles sobre ggplot2",
    "text": "3.3 Nociones √∫tiles sobre ggplot2\n\n3.3.1 Modificar las opciones por default de un geometry\n\nVeamos un ejemplo donde cambiamos el color, el tama√±o, la forma y la transparencia de los puntos:\n\n\nggplot(data = msleep) +\n  aes(x = sleep_rem, y = sleep_total) +\n  geom_point(color = \"blue\", fill = \"green\", size = 5, shape = 23, alpha = 0.5)\n\n\n\n\n\n\n\n\n\nEn este ejemplo hemos modificado caracter√≠sticas para todos los puntos, las cuales se definen dentro del geom correspondiente (geom_point) y no forman parte de la funci√≥n aes().\nOtra cosa distinta es, como hicimos antes, establecer para todo el gr√°fico que el color est√© vinculado a la variable vore, lo cual es un mapeo est√©tico definido dentro de aes() que afecta a todas las capas del gr√°fico.\nUna especificaci√≥n fija del color dentro de geom_point() sobreescribe el mapeo de color de aes():\n\n\nggplot(data = msleep) +\n  aes(x = sleep_rem, y = sleep_total, color = vore) +\n  geom_point(size = 2, color = \"red\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEjercicio\n\n\n\n\nTratar de reproducir el siguiente gr√°fico:\n\n\n\n\n\n\n\n\n\n\n\nAyuda: gu√≠a de s√≠mbolos:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3.3.2 Otras opciones para las scales\n\nComo dijimos antes, las capas que permiten hacer modificaciones sobre los mapeos establecidos comienzan con scale_.\nLuego, el nombre sigue con el mapeo que queremos editar (x_, y_, color_, shape_, etc.) y termina con una palabra que describe c√≥mo es ese mapeo: continuous (para variables continuas), discrete (para variables categ√≥ricas), manual (para asignar manualmente los colores que deseamos), etc.\nPor ejemplo, ya vimos que podemos usar una paleta de colores predefinida, pero tambi√©n podr√≠amos elegir los colores manualmente con scale_color_manual():\n\n\n# limits = identity para que NA est√© en la leyenda, y no s√≥lo los que elegimos a mano\nggplot(data = msleep) +\n  aes(x = sleep_rem, y = sleep_total, color = vore) +\n  geom_point(size = 2) +\n  scale_color_manual(name = \"Alimentaci√≥n\", \n                     values = c(\"carni\" = \"red\", \"herbi\" = \"orange\", \n                                \"insecti\" = \"blue\", \"omni\" = \"green\"), \n                     na.value = \"black\", limits = identity)\n\n\n\n\n\n\n\n\n\n\nCambiar el orden de las categor√≠as en la leyenda:\n\n\nggplot(data = msleep) +\n  aes(x = sleep_rem, y = sleep_total, color = vore) +\n  geom_point(size = 2) +\n  scale_color_manual(name = \"Alimentaci√≥n\", \n                     values = c(\n                       \"carni\" = \"red\", \"herbi\" = \"orange\", \n                       \"insecti\" = \"blue\", \"omni\" = \"green\"), \n                     na.value = \"black\", \n                     limits = c(\"omni\", \"herbi\", \"insecti\", \"carni\", NA))\n\n\n\n\n\n\n\n\n\nMapear una variable continua para el color:\n\n\nggplot(data = msleep) +\n  aes(x = sleep_rem, y = sleep_total, color = awake) +\n  geom_point(size = 2) \n\n\n\n\n\n\n\n\n\nCambiar la escala de colores:\n\n\n\n# De forma manual\nggplot(data = msleep) +\n  aes(x = sleep_rem, y = sleep_total, color = awake) +\n  geom_point(size = 2) +\n  scale_color_continuous(low = \"orange\", high = \"darkred\")\n\n\n\n\n\n\n\n# Con paletas predefinidas\nggplot(data = msleep) +\n  aes(x = sleep_rem, y = sleep_total, color = awake) +\n  geom_point(size = 2) +\n  scale_colour_distiller(palette = \"Greens\")\n\n\n\n\n\n\n\n\n\n\n3.3.3 Crear un objeto de clase ggplot\n\nEs posible guardar nuestros gr√°ficos en un objeto de R, dentro del ambiente de trabajo. Esto tiene varias ventajas y generalmente lo hacemos cuando:\n\nel gr√°fico creado sirve como ‚Äúbase‚Äù y queremos seguir trabaj√°ndolo m√°s adelante, agreg√°ndole otras capas.\ndeseamos guardarlo como un archivo en nuestra compu (exportarlo).\nnecesitamos programar la generaci√≥n de decenas o cientos de figuras como parte de un proyecto, donde tal vez no nos dedicamos a ver una por una.\n\nEjemplo:\n\n\ngraf1 &lt;- ggplot(data = msleep) +\n  aes(x = sleep_rem, y = sleep_total, color = vore) +\n  geom_point(size = 2)\n\n# Versi√≥n b√°sica\ngraf1\n\n\n\n\n\n\n\n# Versi√≥n con t√≠tulo\ngraf1 + \n  ggtitle(\"Relaci√≥n entre el sue√±o total y el sue√±o REM, seg√∫n alimentaci√≥n\")\n\n\n\n\n\n\n\n# Podemos crear una nueva versi√≥n, con t√≠tulo y alguna otra modificaci√≥n\ngraf2 &lt;- graf1 + \n  ggtitle(\"Relaci√≥n entre el sue√±o total y el sue√±o REM, seg√∫n alimentaci√≥n\") +\n  scale_x_continuous(breaks = 0:7, limits = c(0, 7)) +\n  scale_y_continuous(breaks = seq(0, 20, 4), limits = c(0, 20))\n  \ngraf2\n\n\n\n\n\n\n\n\n\n\n3.3.4 Exportar gr√°ficos\n\nMencionamos dos alternativas:\n\nEn la pesta√±a Plots de RStudio, usando el bot√≥n Export.\n\nProporciona opciones para copiar el gr√°fico en el portapapeles o guardarlo como archivo (formatos .png, .jpg, .tiff, .pdf, entre otros).\nEl cuadro de di√°logo es muy √∫til para especificar el tama√±o de la figura y su resoluci√≥n.\n\nCon la funci√≥n ggsave() del paquete ggplot2.\n\nEs muy f√°cil de usar, y sobre todo, muy √∫til para agregar en nuestro script si tenemos que hacer muchos gr√°ficos.\nPor default guarda el √∫ltimo gr√°fico creado, o podemos indicarle el que nosotros queramos haciendo referencia a un objeto ya creado.\nIdentifica el formato autom√°ticamente a partir de la extensi√≥n que pongamos en el nombre del archivo.\n\n\n\n\nggsave(\"miGrafico.pdf\", graf2)\nggsave(\"miGrafico.jpg\", graf2, width = 8, height = 5, units = \"cm\")\n\n\n\n\n\n\n\nEjercicio\n\n\n\n\nCrear un gr√°fico de boxplots para la variable awake seg√∫n las categor√≠as de vore, tal cual figura a continuaci√≥n, y guardarlo en un archivo llamado boxplot.png que tenga 20 cm. de ancho y 15 cm. de alto.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3.3.5 Otras opciones para los themes\n\nLos argumentos de la capa theme() tienen nombres compuestos por palabras claves separadas por puntos.\nLa primera palabra clave indica el elemento a editar (por ejemplo, legend).\nLa segunda palabra clave indica qu√© aspecto le cambiaremos (por ejemplo, legend.position).\nEsta opci√≥n sirve, justamente, para cambiar la posici√≥n de la leyenda:\n\n\ngraf2 + theme(legend.position = \"bottom\")\n\n\n\n\n\n\n\n\n\nLeyenda dentro de la figura:\n\n\ngraf2 + \n  theme(legend.position = c(0.9, 0.3))\n\n\n\n\n\n\n\n\n\nLos valores (0.9, 0.3) indican que el punto medio de la leyenda (el centro del rect√°ngulo) se ubica a la altura del 90% de la extensi√≥n del eje X, y al 30% de la altura de extensi√≥n del eje Y. Para justificar la leyenda usando otros criterios (por ejemplo, definir las coordenadas del punto inferior izquierdo) usamos la opci√≥n legend.justification:\n\n\ngraf2 + \n  theme(\n    legend.position = c(0.9, 0.3),\n    legend.justification = c(0, 0)\n    )\n\n\n\n\n\n\n\n\n\nHay 4 tipos de elementos que afectan distintos componentes del gr√°fico dentro de la funci√≥n theme():\n\nelement_rect(): para modificar la apariencia de elementos rectangulares, como el fondo del gr√°fico o de la leyenda, etc.\nelement_line(): modifica l√≠neas de los ejes, de la cuadr√≠cula del fondo, el borde del gr√°fico, los ticks de los ejes, etc.\nelement_text(): modifica el t√≠tulo, los t√≠tulos de los ejes, el texto de la leyenda, etc.\nelement_blank(): para eliminar un componente.\n\nPor ejemplo, para cambiar el rect√°ngulo de la leyenda:\n\n\ngraf2 + \n  theme(\n    legend.position = c(1, 0), \n    legend.justification = c(1, 0),\n    legend.background = element_rect(fill = \"transparent\", \n                                     color = \"black\", linetype = \"solid\")\n  )\n\n\n\n\n\n\n\n\n\nLos textos dependen de element_text(), por ejemplo:\n\n\ngraf2 + \n  theme(\n    legend.position = c(1, 0), \n    legend.justification = c(1, 0),\n    legend.background = element_rect(fill = \"transparent\", \n                                     color = \"black\", linetype = \"solid\"),\n    legend.text = element_text(colour = \"blue\", size = 16, face = \"bold\"),\n    legend.title = element_text(colour = \"purple\", size = 16, face = \"bold\")\n    )\n\n\n\n\n\n\n\n\n\nLas opciones para editar los ejes comienzan con axis:\n\n\ngraf2 + \n    theme(\n    legend.position = c(1, 0), \n    legend.justification = c(1, 0),\n    legend.background = element_rect(fill = \"transparent\", \n                                     color = \"black\", linetype = \"solid\"),\n    legend.text = element_text(colour = \"blue\", size = 16, face = \"bold\"),\n    legend.title = element_text(colour = \"purple\", size = 16, face = \"bold\"),\n    axis.title.x = element_text(color = \"forestgreen\", size = 18, face = \"italic\"),\n    axis.title.y = element_text(color = \"orange\", size = 18, face = \"italic\"),\n    axis.text = element_text(color = \"red\", face = \"bold\")\n    )\n\n\n\n\n\n\n\n\n\nSe pueden eliminar componentes con element_blank():\n\n\ngraf2 + \n    theme(\n        axis.title = element_blank(),\n        axis.text = element_blank(),\n        axis.ticks = element_blank(),\n        panel.grid = element_blank(),\n        plot.title = element_blank(),\n        legend.position = \"none\"\n    )\n\n\n\n\n\n\n\n\n\nComo vimos, hay themes predeterminados, por ejemplo:\n\n\ngraf2 + theme_linedraw()\n\n\n\n\n\n\n\n\n\nY tambi√©n se pueden instalar paquetes de R que traen muchos m√°s themes:\n\nggthemes\nggthemr\ntvthemes\nggtech\nhrbrthemes\n\n\nEjemplo con ggthemes:\n\nlibrary(ggthemes)\ngraf2 + theme_solarized()\n\n\n\n\n\n\n\n\n\n\n3.3.6 Colores\n\nR usa el sistema hexadecimal para representar colores. Este sistema mezcla las intensidades de los colores rojo, verde y azul (RGB por sus siglas en ingl√©s) usando una escala de 16 valores: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E y F.\nLa representaci√≥n de un color espec√≠fico emplea el s√≠mbolo numeral (‚Äò#‚Äô) seguido de 2 valores correspondientes al color rojo, 2 valores para el verde y 2 valores para el azul. Podemos pensar que la escala mencionada anteriormente va desde el 00 (ausencia del color) hasta el FF (m√°xima intensidad de ese color).\nVeamos algunos ejemplos:\n\n\nlibrary(scales)\nshow_col(c(\n  \"#FF0000\", \"#00FF00\", \"#0000FF\",\n  \"#880000\", \"#88FF00\", \"#8800FF\",\n  \"#000000\", \"#FFFFFF\", \"#888888\")\n  )\n\n\n\n\n\n\n\n\n\nDado que contamos con \\(16 \\times 16 = 256\\) valores posibles para intensidades de cada uno de los 3 colores, la cantidad total de tonalidades disponibles asciende a \\(256^3 = 16.777.216\\).\nAlgunas de estas m√°s de 16 millones de combinaciones posibles poseen nombres espec√≠ficos en R. No necesitamos acordarnos que el color rojo posee un c√≥digo hexadecimal igual a ‚Äú#FF0000‚Äù, ya que podemos escribirlo directamente como \"red\".\nEl listado completo de colores con nombre propio en R puede consultarse mediante la funci√≥n colors(). Debajo los vemos en una paleta interactiva:\n\n\n\n\n\n\n\n\nUna vez que ya elegimos los colores que m√°s nos gustan, podemos escribir su c√≥digo hexadecimal en la funci√≥n scale_ correspondiente:\n\n\nggplot(data = msleep) +\n  aes(x = sleep_rem, y = sleep_total, color = awake) +\n  geom_point(size = 2) +\n  scale_color_continuous(low = \"#54FF9F\", high = \"#0B0B61\")\n\n\n\n\n\n\n\n\n\nElegir colores ‚Äúa dedo‚Äù puede ser cansador, ya que como vimos, hay millones de posibilidades. Muchas veces la opci√≥n m√°s c√≥moda es utilizar paletas creadas por expertos en teor√≠a del color, de las cuales R ofrece varias posibilidades.\nUnas de las m√°s conocidas son las paletas de Brewer, mencionadas en la primera clase de la materia:\n\n\n\n\n\n\n\n\n\n\n\nYa vimos ejemplos de c√≥mo usarlas mediante las funciones scale_color_brewer() (valores discretos) o bien scale_color_distiller() (valores continuos).\nOtras paletas que vale la pena mencionar son las del paquete viridis:\n\n\n\n\n\n\n\n\n\n\n\nEstas paletas poseen dos ventajas importantes: son aptas para personas con diferentes grados de daltonismo (m√°s info ac√°) y mantienen su uniformidad cuando se las imprime en blanco y negro.\nEjemplo de uso:\n\n\nlibrary(viridis)\n\nggplot(data = msleep) +\n  aes(x = sleep_rem, y = sleep_total, color = awake) +\n  geom_point(size = 2) +\n  scale_color_viridis(option = \"inferno\")\n\n\n\n\n\n\n\n\n\nPara m√°s informaci√≥n sobre el uso de colores en R y otros tipos de paletas, recomendamos leer este post de DataNovia.",
    "crumbs": [
      "Unidad 1. Introducci√≥n",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Introducci√≥n a `ggplot2`</span>"
    ]
  },
  {
    "objectID": "capitulos/01_introduccion_a_ggplot2.html#extensiones-de-ggplot2",
    "href": "capitulos/01_introduccion_a_ggplot2.html#extensiones-de-ggplot2",
    "title": "3¬† Introducci√≥n a ggplot2",
    "section": "3.4 Extensiones de ggplot2",
    "text": "3.4 Extensiones de ggplot2\n\nExisten muchos libros gratuitos que ense√±an sobre visualizaci√≥n con ggplot2. Si bien una b√∫squeda r√°pida en Google revela decenas de posibilidades, mencionamos s√≥lo 2 de los m√°s populares:\n\nggplot2: Elegant Graphics for Data Analysis - Hadley Wickham\nR Graphics Cookbook - Winston Chang\n\nAdem√°s, hay paquetes con funciones muy √∫tiles que extienden la cantidad de cosas que se pueden hacer con ggplot2, las cuales generalmente est√°n pensadas para facilitar la interpretaci√≥n de resultados de alg√∫n tipo de an√°lisis en particular.\nAlgunos paquetes que vale la pena explorar son:\n\nGGally\nggfortify\nggforce\nggrepel\ngganimate\npatchwork\nplotly\n\nVeamos a continuaci√≥n algunos ejemplos desarrollados con estas herramientas.\n\n\nGGally\n\nEste paquete ofrece muchas herramientas interesantes, entre ellas, la funci√≥n ggpairs() que permite hacer matrices de gr√°ficos para ver la relaci√≥n de a pares entre conjuntos de variables:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggforce\n\nSe publicita como un paquete con nuevas geoms_ para extender el potencial del ggplot2 original. Vemos por ejemplo el uso de una elipse para agregar anotaciones:\n\n\nlibrary(ggforce)\n\nggplot(data = msleep) +\n  aes(x = log(bodywt), y = log(sleep_total), color = vore) +\n  geom_point() + \n  geom_mark_ellipse(\n    aes(\n      filter = bodywt &gt;= 1000,\n      label = \"Animales con peso mayor a 1 Tn.\",\n      description = \"Elefante asi√°tico y elefante africano\"\n    ),\n    show.legend = FALSE\n  )\n\n\n\n\n\n\n\n\n\n\nggfortify\n\nImplementa gr√°ficos en ggplot2 para salidas de m√©todos estad√≠sticos como modelos lineales, curvas de supervivencia, regresiones penalizadas, georreferenciamiento, series de tiempo, componentes principales, clustering, etc.\n\n\n\n\n\n\n\n\n\n\n\n\nggrepel\n\nOfrece algoritmos que optimizan la ubicaci√≥n de etiquetas dentro del gr√°fico:\n\n\nlibrary(ggrepel)\n\ngraf1 +\n    geom_label_repel(aes(label = name), show.legend = FALSE)\n\n\n\n\n\n\n\n\n\n\npatchwork\n\nFacilita la uni√≥n de diferentes gr√°ficos en una sola figura:\n\n\nlibrary(patchwork)\n\ngraf1 + graf2 + \n  plot_layout(nrow = 2, heights = c(0.3, 0.7))\n\n\n\n\n\n\n\n\n\n\ngganimate y plotly\n\nOfrecen herramientas para la creaci√≥n de gr√°ficos animados. Los presentaremos en las pr√≥ximas unidades de la materia.",
    "crumbs": [
      "Unidad 1. Introducci√≥n",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Introducci√≥n a `ggplot2`</span>"
    ]
  },
  {
    "objectID": "capitulos/02.html",
    "href": "capitulos/02.html",
    "title": "Unidad 2. R Markdown",
    "section": "",
    "text": "Presentaci√≥n de la Unidad 2.\n\nP√°gina en construcci√≥n.",
    "crumbs": [
      "Unidad 2. R Markdown"
    ]
  },
  {
    "objectID": "capitulos/02_Rmarkdown.html",
    "href": "capitulos/02_Rmarkdown.html",
    "title": "4¬† Comunicaci√≥n de Resultados: R Markdown",
    "section": "",
    "text": "4.1 Introducci√≥n\nlibrary(DT)\nlibrary(kableExtra)\nlibrary(tinytex)\nlibrary(tidyverse)\nlibrary(knitr)\nlibrary(rmarkdown)\nDisclaimer: la autor√≠a de este material corresponde en parte al profesor Marcos Prunello.",
    "crumbs": [
      "Unidad 2. R Markdown",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Comunicaci√≥n de Resultados: R Markdown</span>"
    ]
  },
  {
    "objectID": "capitulos/02_Rmarkdown.html#introducci√≥n",
    "href": "capitulos/02_Rmarkdown.html#introducci√≥n",
    "title": "4¬† Comunicaci√≥n de Resultados: R Markdown",
    "section": "",
    "text": "Los contenidos de esta unidad est√°n motivados por el concepto de comunicaci√≥n eficiente.\nEsta idea se encuentra √≠ntimamente ligada al contexto en el cual nos desempe√±amos. No es lo mismo escribir una tesis acad√©mica, que un reporte para uso interno dentro de una empresa, que generar un informe que ser√° publicado en redes sociales. La manera en que presentamos los resultados, el lenguaje que utilizamos, el formato de salida y muchas otras caracter√≠sticas depender√°n del p√∫blico al que va dirigido el mensaje.\nComo ya sabemos, la aparici√≥n de nuevas herramientas inform√°ticas ha revolucionado la manera en que nos comunicamos, no s√≥lo a trav√©s del lenguaje oral, sino tambi√©n del escrito. En particular, consideramos que existen dos paradigmas muy arraigados que necesitan ser repensados (no eliminados) dado el contexto actual:\n\nEl concepto de informe est√°tico, generalmente impreso en papel o compartido en formato Word, PDF, PowerPoint, etc. En ocasiones es aconsejable otorgarle cierto poder de decisi√≥n al usuario/a que leer√° el informe, d√°ndole la posibilidad de elegir qu√© variables o categor√≠as graficar, c√≥mo ordenar las tablas presentadas, etc. En este sentido, repasaremos algunas herramientas para dinamizar y hacer interactivos los informes que elaboramos: R Markdown, y m√°s adelante, R Shiny y Power BI.\nEl concepto de informe definitivo. Muchas veces parece que hemos llegado a un punto final, a partir del cual no hay lugar para la actualizaci√≥n, la mejora o la revisi√≥n del trabajo realizado. ¬øQu√© pasa si descubrimos un error de carga en los datos y es necesario cambiar todos los resultados? O bien, ¬øqu√© hacemos si hay nueva informaci√≥n disponible y tambi√©n queremos actualizar el material? En este punto, R sale otra vez al rescate, gracias a su flujo de trabajo integrado y f√°cilmente reproducible.\n\nPara reproducir los ejemplos de este apunte, necesitamos los siguientes paquetes:",
    "crumbs": [
      "Unidad 2. R Markdown",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Comunicaci√≥n de Resultados: R Markdown</span>"
    ]
  },
  {
    "objectID": "capitulos/02_Rmarkdown.html#qu√©-es-r-markdown",
    "href": "capitulos/02_Rmarkdown.html#qu√©-es-r-markdown",
    "title": "4¬† Comunicaci√≥n de Resultados: R Markdown",
    "section": "4.2 Qu√© es R Markdown",
    "text": "4.2 Qu√© es R Markdown\n\nEn R, la posibilidad de entrelazar el an√°lisis estad√≠stico con la generaci√≥n de reportes se logra a trav√©s de R Markdown y todos sus productos derivados. Estas herramientas pueden ser utilizadas, entre otras cosas, para construir:\n\nInformes o reportes laborales\nPresentaciones con diapositivas\nArt√≠culos acad√©micos (papers)\nP√°ginas web\nBlogs\nLibros (s√≠, libros enteros)\n\n\n\n\n\nEstamos acostumbrados a realizar estas tareas con diferentes programas: Word para documentos que contienen una gran cantidad de texto, PowerPoint para presentaciones, Excel para reportes que incluyen tablas y gr√°ficos, etc. ¬øPor qu√© deber√≠amos pensar en cambiar estas costumbres? Existen tres razones que podemos agregar a los ya mencionados cambios de paradigma:\n\nIntegraci√≥n: si trabajamos con R podemos llevar a cabo todos los pasos del proceso de an√°lisis mediante el mismo software (no m√°s copiado y pegado de resultados de R a otros programas). Es posible escribir art√≠culos, lanzar p√°ginas web o publicar libros sin salir de RStudio.\nReplicaci√≥n: la estructura de trabajo de R Markdown facilita su replicabilidad, ya que gracias a la mencionada integraci√≥n, todos los pasos del proceso se encuentran contenidos en un solo lugar: lectura y limpieza de datos, an√°lisis estad√≠stico, ajuste de modelos, escritura de texto y conclusiones, generaci√≥n de un reporte que incluya resultados, tablas, gr√°ficos, c√≥digo utilizado, etc. Algunos autores definen la replicaci√≥n como una parte esencial del m√©todo cient√≠fico.\nSalto de Categor√≠a: la calidad de los archivos generados y las opciones de personalizaci√≥n que podemos alcanzar con R son enormes, d√°ndole un aspecto mucho m√°s profesional a nuestro trabajo.\n\nPero, ¬øqu√© es Markdown? Es el nombre de un lenguaje de marcado ligero que sirve para producir distintos tipos de documentos, a partir de una sintaxis donde las sentencias incluyen exclusivamente el uso de caracteres b√°sicos. Adem√°s, se guardan en archivos de texto plano, sin formato.\nSi bien este lenguaje fue desarrollado originalmente para producir textos de p√°ginas web y as√≠ simplificar la escritura de c√≥digo HTML, su dise√±o permite convertir un documento de tipo markdown a una gran variedad de formatos de salida. Generalmente se usa para escribir archivos README o documentaci√≥n, publicaciones en foros online, servicios de mensajer√≠a instant√°nea, etc.\nEl formato de documentos R Markdown se encarga de incorporar este tipo de escritura en R para poder combinar texto, c√≥digo y salidas en la creaci√≥n de archivos publicables de excelente calidad, resultando en un proceso de creaci√≥n relativamente sencillo.\nLos paquetes que implementan todo esto son rmarkdown y knitr:\n\n\n \n\n\n\n\nPodemos elegir diferentes formatos de salida, entre ellos HTML, PDF, Word y PowerPoint. Si bien en esta clase nos enfocaremos √∫nicamente en los dos primeros, aquellos interesados en conocer m√°s sobre la conexi√≥n entre R Markdown y Word pueden consultar este tutorial. Por otro lado, una peque√±a introducci√≥n a la relaci√≥n R Markdown - PowerPoint puede encontrarse en el cap√≠tulo 4.4 de R Markdown - The Definitive Guide.\n\n\n\n\n\n\n\nAclaraci√≥n\n\n\n\nEn 2022 Posit (la compa√±√≠a antes llamada RStudio) relanz√≥ R Markdown bajo el nombre de Quarto. Si bien este nuevo producto posee algunas diferencias con respecto al original, estas son m√≠nimas, y todo lo que figura a continuaci√≥n puede aplicarse en cualquiera de las dos versiones.",
    "crumbs": [
      "Unidad 2. R Markdown",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Comunicaci√≥n de Resultados: R Markdown</span>"
    ]
  },
  {
    "objectID": "capitulos/02_Rmarkdown.html#primeros-pasos",
    "href": "capitulos/02_Rmarkdown.html#primeros-pasos",
    "title": "4¬† Comunicaci√≥n de Resultados: R Markdown",
    "section": "4.3 Primeros Pasos",
    "text": "4.3 Primeros Pasos\n\nUn documento R Markdown b√°sico puede crearse de forma sencilla con RStudio accediendo a File &gt; New File &gt; R Markdown, o bien haciendo click en la cruz blanca sobre fondo verde y eligiendo R Markdown en el men√∫ desplegable:\n\n\n\n\n\n\n\n\n\n\n\nEn la siguiente ventana se nos pregunta qu√© tipo de documento queremos crear, con varias opciones disponibles:\n\nDocumento de texto (HTML, PDF o Word)\nPresentaci√≥n (diapositivas)\nShiny (app que puede ejecutarse a trav√©s de un navegador web e incorpora contenido interactivo)\nDesde un template (documentos con formato pre-seteado provistos por algunos paquetes)\n\n\n\n\n\n\n\n\n\n\n\n\nPodemos tomar de ejemplo un documento de texto en formato HTML.\nUna vez elegido el tipo de documento, RStudio ofrece por defecto una plantilla que incluye varias secciones, las cuales analizaremos en detalle a continuaci√≥n. Es importante notar que, a diferencia de los archivos de c√≥digo comunes (con extensi√≥n .R), este archivo posee la extensi√≥n .Rmd (o bien .qmd si usamos Quarto).\nDebemos guardar este documento en alguna carpeta de nuestra compu.\nSu estructura general se representa en la siguiente imagen:\n\n\n\n\n\n\n\n\n\n\n\n4.3.1 Encabezado\n\nEl encabezado, tambi√©n conocido como YAML Metadata, se coloca al comienzo del documento entre dos tiras de guiones. Aqu√≠ se incluyen el t√≠tulo del documento y subt√≠tulo si lo tuviera, autor, fecha y varias opciones m√°s.\nEn output se indica el formato de salida que se desea; si bien esta opci√≥n se genera autom√°ticamente al elegir el formato en la pantalla anterior, podemos modificarlo manualmente si cambiamos de opini√≥n.\n\n---\ntitle: \"Mi Primer Markdown en HTML\"\nsubtitle: \"AED | Lic. en Estad√≠stica | FCEyE | UNR\"\nauthor: \"Diego & Iv√°n\"\ndate: \"Agosto 2024\"\noutput: html_document\n---\n\nM√°s adelante mencionaremos m√°s opciones que dependen del output elegido.\n\n\n\n4.3.2 Texto\n\nPara la escritura de texto se usa el lenguaje Pandoc‚Äôs Markdown, una extensi√≥n del Markdown original. Un amplio manual sobre esta herramienta puede consultarse en la web oficial de Pandoc, un software libre que se utiliza para convertir documentos de un formato a otro.\nEn la siguiente tabla mostramos algunos trucos para darle un aspecto m√°s interesante al texto que escribimos en R Markdown:\n\n\n\n\n\n\n\n\n\n\n\nLos encabezados de cada secci√≥n se definen mediante numerales: un numeral equivale a un t√≠tulo principal, dos numerales a un subt√≠tulo, tres numerales a un sub-subt√≠tulo, etc.:\n\n\n\n\n\n\n\n\n\n\n\nPor defecto, el √≠ndice de un documento R Markdown incluye los encabezados de nivel 1, 2 y 3. Si queremos cambiar este comportamiento, podemos utilizar la opci√≥n toc_depth: x dentro del encabezado, para mostrar los niveles 1 a x.\nRecomendamos dejar un espacio entre el numeral y el t√≠tulo de la secci√≥n (# T√≠tulo), ya que para ciertos formatos de salida de R Markdown, la expresi√≥n #T√≠tulo no ser√° reconocida como tal.\nPara iniciar un nuevo p√°rrafo en Pandoc debemos dejar dos espacios al final de una l√≠nea de texto o bien un rengl√≥n vac√≠o entre una cadena de texto y la otra. Con un solo Enter no lograremos nada.\n\n\n\n4.3.3 C√≥digo\n\nPara a√±adir c√≥digo dentro de un documento Rmd es necesario insertar un chunk, t√©rmino que podemos traducir como pedazo o bloque. Las dos maneras m√°s directas de hacerlo son:\n\nApretar las teclas Ctrl + Alt + i, o bien‚Ä¶\nHacer click en el √≠cono Insert en la barra de edici√≥n y elegir la primera opci√≥n (R). Tambi√©n es posible insertar chunks que contengan sentencias escritas en otros lenguajes (Python, SQL, Stan, etc.)\n\n\n\n\n\nDentro de estos bloques podemos escribir c√≥digo de R, tal como lo hacemos regularmente en un archivo de sentencias com√∫n y corriente. En lo posible, se recomienda crear bloques relativamente aut√≥nomos y enfocados en una sola tarea: por ejemplo, un bloque para importar datos, otro para ajustes, otro para generar gr√°ficos, etc.\nPara correr todo el c√≥digo presente en un bloque se puede usar el atajo Ctrl + Shift + Enter o bien el tri√°ngulo verde ubicado en la parte superior derecha del chunk.\nLa salida generada por cada chunk puede personalizarse con distintos argumentos que se indican en su encabezado. El paquete knitr provee casi 60 opciones para personalizar chunks: ac√° podemos consultar la lista completa.\nA continuaci√≥n repasamos algunas de los m√°s √∫tiles:\n\neval = TRUE/FALSE define si el c√≥digo de ese chunk debe ejecutarse, o no (en este caso no se generan resultados). Esta opci√≥n es √∫til para mostrar ejemplos de sentencias que no deseamos correr, o bien para deshabilitar la ejecuci√≥n de un gran bloque de c√≥digo sin comentar cada l√≠nea.\necho = TRUE/FALSE define si el c√≥digo se muestra en el documento final, o no. Por defecto todo chunk se ejecuta y se imprime. Dado que en numerosas ocasiones no deseamos que nuestro c√≥digo se haga p√∫blico, la opci√≥n echo = FALSE es una de las m√°s utilizadas.\nmessage, warning y error definen si los mensajes, advertencias o errores generados por las funciones ejecutadas dentro del chunk deben mostrarse (TRUE) o no (FALSE).\nresults define qu√© hacer con los resultados del c√≥digo presente en ese chunk: imprimir con formato (\"markup\"), sin formato (\"asis\"), no imprimir (\"hide\") o imprimir todo junto al final (\"hold\").\nfig.height y fig.width definen el alto y el ancho (en pulgadas) de los gr√°ficos generados por ese chunk.\nout.width define el ancho de los gr√°ficos generados por ese chunk, con respecto al tama√±o relativo de la p√°gina; por ejemplo out.width=\"75%\" imprime un gr√°fico que ocupa las tres cuartas partes del ancho total.\nfig.align define la justificaci√≥n de la imagen: a la izquierda (\"left\"), centradas (\"center\") o a la derecha (\"right\").\nfig.cap define el texto que describe el gr√°fico generado (caption), el cual se ubica debajo de la imagen.\n\n\n\n\n\nLos chunks pueden recibir nombres, que no deben repetirse a lo largo del documento. Esta opci√≥n facilita la organizaci√≥n en archivos extensos, permite crear v√≠nculos a resultados de chunks espec√≠ficos a lo largo del documento, y adem√°s, nos ayuda a encontrar y resolver problemas de forma m√°s eficaz.\nUn ejemplo de chunk bautizado BloqueMuyImportante con algunas opciones luce as√≠:\n\n```{r BloqueMuyImportante, warning=TRUE, echo=TRUE}\n datos &lt;- read_excel(\"Plantilla.xlsx\")\n summary(datos)\n```\n\nLas opciones de personalizaci√≥n de chunks, tal como las escribimos hasta ahora, afectan s√≥lo al c√≥digo contenido dentro de ese bloque. Si deseamos definir estas opciones de manera global, de tal manera que abarquen a todos los chunks del documento, podemos hacerlo mediante la funci√≥n opts_chunk() del paquete knitr.\nEs com√∫n que el primer chunk del archivo contenga un llamado a esta funci√≥n, definiendo los detalles globales de todos los bloques generados en el resto del documento. Generalmente se le da el nombre setup, aunque esto es opcional. Por ejemplo:\n\n```{r setup, include = FALSE}\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, \n                      comment = NA, fig.align = \"center\", out.width = \"100%\")\n```\nSi quiero cambiar el comportamiento definido en opts_chunk() s√≥lo en algunos bloques determinados, alcanza con volver a definir las opciones en sus respectivos encabezados.\n\n\n4.3.4 Compilar\nPara generar el documento definitivo basta con cliquear el bot√≥n Knit (literalmente, tejer) que se encuentra en la barra de herramientas de RStudio:\n\n\n\n\n\n\n\n\n\n\nOtra opci√≥n para generar documentos es utilizar la funci√≥n render() del paquete rmarkdown:\n\n\nrender(\"MiArchivo.Rmd\")\n\nPara tener en cuenta:\n\nAl momento de generar un documento, R s√≥lo podr√° utilizar los objetos definidos dentro del Rmd mismo: de nada sirve cargar un objeto en nuestro ambiente de trabajo, si luego no replicamos esa sentencia en el Markdown.\nAl lado del bot√≥n Knit hay una lista desplegable que nos permite elegir otro formato de salida, diferente al que tenemos indicado por default.",
    "crumbs": [
      "Unidad 2. R Markdown",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Comunicaci√≥n de Resultados: R Markdown</span>"
    ]
  },
  {
    "objectID": "capitulos/02_Rmarkdown.html#herramientas-√∫tiles",
    "href": "capitulos/02_Rmarkdown.html#herramientas-√∫tiles",
    "title": "4¬† Comunicaci√≥n de Resultados: R Markdown",
    "section": "4.4 Herramientas √∫tiles",
    "text": "4.4 Herramientas √∫tiles\n\n4.4.1 Listas\n\nPara crear listas de elementos no numerados, podemos usar un asterisco (*) o bien un guion (-). Si deseamos agregar sublistas dentro de algunas listas, el asterisco o guion debe estar precedido una tabulaci√≥n o cuatro espacios.\nPor otro lado, para listas numeradas debemos agregar al principio de cada elemento el n√∫mero correspondiente a cada √≠tem, seguido de un punto (1., 2., etc.). Si no tenemos ganas de contar la cantidad de √≠tems, podemos usar la numeraci√≥n 1. para cada elemento y R har√° los incrementos autom√°ticamente:\n\n\n\n\n\n\n\n\n\n\n\n\n4.4.2 Enlaces\n\nPara a√±adir links a p√°ginas web se puede escribir lo siguiente: [Link a la p√°gina web de la FCEyE-UNR](https://www.fcecon.unr.edu.ar/), lo cual se mostrar√° as√≠: Link a la p√°gina web de la FCEyE-UNR.\nSi queremos que el link quede visible, podemos escribir &lt;https://www.fcecon.unr.edu.ar&gt; y se ver√° as√≠: https://www.fcecon.unr.edu.ar.\n\n\n\n4.4.3 Im√°genes\n\nSi queremos insertar im√°genes dentro de nuestro documento, recomendamos utilizar la funci√≥n include_graphics() de knitr:\n\n```{r, out.width=\"50%\"}\nknitr::include_graphics(\"../imagenes/unidad02/C:/Mis Documentos/messi.jpg\")\n```\n\n\n\n\n\n\n\n\n\n\nEste recurso es v√°lido para im√°genes de formato png, jpg, gif, pdf (entre otros) que est√©n guardadas en nuestra PC o que se encuentren alojadas online.\nNo es necesario utilizar esta funci√≥n si queremos incluir un gr√°fico generado dentro de R, directamente escribimos el c√≥digo correspondiente en un chunk (que seguramente queramos dejar oculto):\n\n```{r, out.width = \"60%\", echo = TRUE}\nggplot(mpg) +\n  aes(x = cty, fill = factor(cyl)) +\n  geom_density(alpha = 0.8) +\n  labs(title = \"Gr√°fico de densidad\", \n       subtitle = \"Millaje en ciudad seg√∫n n√∫mero de cilindros\",\n       caption = \"Fuente: datos mpg\",\n       x = \"Millas por gal√≥n\", y = \"Densidad\",\n       fill = \"Nro de cilindros\") +\n  theme(legend.position = \"bottom\")\n```\n\n\n\n\n\n\n\n\n\n\n\n4.4.4 Tablas\n\nFrecuentemente necesitamos presentar tablas con resultados de nuestros an√°lisis.\nPor ejemplo, el promedio de algunas variables calculado seg√∫n la cantidad de cilindros que tienen los autos listados en el dataset mtcars, como vemos a continuaci√≥n:\n\n\nresultado &lt;- mtcars %&gt;% \n  group_by(cyl) %&gt;% \n  summarise_at(c(1, 3:7), mean)\n\nresultado\n\n# A tibble: 3 √ó 7\n    cyl   mpg    hp  drat    wt  qsec    vs\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1     4  26.7  82.6  4.07  2.29  19.1 0.909\n2     6  19.7 122.   3.59  3.12  18.0 0.571\n3     8  15.1 209.   3.23  4.00  16.8 0    \n\n\n\n\nTambi√©n podemos recurrir a la sintaxis de Markdown para crear tablas, que indica que hay definir el encabezado separ√°ndolo con guiones del resto de las filas e identificar las columnas con barras verticales.\nPor ejemplo:\n| cyl|   mpg|     hp| drat|   wt|  qsec|   vs|\n|:--:|-----:|------:|----:|----:|-----:|----:|\n|   4| 26.66|  82.64| 4.07| 2.29| 19.14| 0.91|\n|   6| 19.74| 122.29| 3.59| 3.12| 17.98| 0.57|\n|   8| 15.10| 209.21| 3.23| 4.00| 16.77| 0.00|\nDebajo vemos los resultados en nuestros archivos compilados, primero en versi√≥n html y luego en pdf:\n\n\n\ncyl\nmpg\nhp\ndrat\nwt\nqsec\nvs\n\n\n\n\n4\n26.66\n82.64\n4.07\n2.29\n19.14\n0.91\n\n\n6\n19.74\n122.29\n3.59\n3.12\n17.98\n0.57\n\n\n8\n15.10\n209.21\n3.23\n4.00\n16.77\n0.00\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHay p√°ginas que nos ayudan a generar esas tablas con guiones y barras (recomendamos explorar la web Tables Generator), pero la idea es no hacerlo a mano.\nExisten muchos paquetes muy potentes para este configurar cualquier aspecto de las tablas (como xtable, huxtable, formattable, kableExtra y varios otros) con opciones que en algunos casos son espec√≠ficas para cada formato de salida. Cada uno provee herramientas particulares para generar tablas con formato a partir c√≥digo de R.\n\n\n\n4.4.5 C√≥digo din√°mico\n\nUna manera de insertar resultados dentro del texto escrito es utilizando el formato `r MiObjeto`, donde MiObjeto es cualquier valor definido en los chunks del documento. Por ejemplo, puedo definir un objeto llamado pvalue en un reporte que genero mensualmente; cada vez que vuelvo a correr las sentencias, pvalue cambiar√° de valor.\nSi dentro del texto del reporte deseo mencionar el valor exacto de pvalue, el formato de c√≥digo din√°mico nos ayuda a imprimir de forma autom√°tica este valor, sin tener que preocuparnos por cambiarlo manualmente.\nProbamos esta t√©cnica con un test t a dos colas, donde la hip√≥tesis nula es \\(H_0)\\mu=0\\) y la alternativa \\(H_1)\\mu\\neq0\\). En nuestro documento .Rmd tenemos este chunk:\n\n```{r, echo = FALSE}\nprueba &lt;- t.test(rnorm(30), alternative = \"two.sided\", mu = 0) \npvalue &lt;- prueba$p.value\n```\n\nEn alg√∫n lugar del documento escribimos:\n\nSe realiz√≥ la prueba T-Student (pvalue = `r pvalue`).\n\nY el resultado final en el archivo compilado ser√°:\n\nSe realiz√≥ la prueba T-Student (pvalue = 0.7024458).\n\nIncluso el texto podr√≠a estar controlado por objetos de R, como se puede ver en esta otra versi√≥n m√°s ‚Äúsofisticada‚Äù del caso anterior. En el documento ponemos:\n\nEl promedio `r ifelse(pvalue &lt;= 0.05, \"\", \"no\")` difiere significativamente de cero (pvalue = `r round(pvalue, 4)`).\n\nY el resultado final en el archivo compilado ser√°:\n\nEl promedio no difiere significativamente de cero (pvalue = 0.7024).\n\n\n4.4.6 Escritura matem√°tica\n\nR Markdown tambi√©n admite el uso de notaci√≥n matem√°tica para la escritura de f√≥rmulas, siempre que encerremos la expresi√≥n en cuesti√≥n con un s√≠mbolo ‚Äú$‚Äù si deseamos ecuaciones ubicadas en la misma l√≠nea que el texto escrito, o bien mediante un doble s√≠mbolo ‚Äú$$‚Äù, para ecuaciones ubicadas en un nuevo rengl√≥n.\nPor ejemplo $\\sum_{i=1}^{N} (x_i-\\mu)^2$ se muestra como \\(\\sum_{i=1}^{N} (x_i-\\mu)^2\\), mientras que $$\\sum_{i=1}^{N} (x_i-\\mu)^2$$ se muestra como \\[\\sum_{i=1}^{N} (x_i-\\mu)^2\\]\n¬øDe d√≥nde sale esa sucesi√≥n extra√±a de caracteres para definir la f√≥rmula? R Markdown, como muchos otros lenguajes de marcado ligero, toma prestada la sintaxis de LaTeX para la escritura de f√≥rmulas.\n\n\n\nUna gran lista de ejemplos de notaci√≥n matem√°tica puede encontrarse en este link.\nVeamos ahora algunos ejemplos de s√≠mbolos y formatos comunes a la hora de escribir textos matem√°ticos:\n\nOperadores: \n$5 + z \\leq 4 \\times \\sqrt[3]{x}$\n\\(5 + z \\leq 4 \\times \\sqrt[3]{x}\\)\nSub√≠ndices y super√≠ndices:\n$x^2 + y^3 - z_0$\n\\(x^2 + y^3 - z_0\\)\nLetras griegas:\n$\\delta + \\Delta + \\gamma + \\Gamma - \\pi - \\phi$\n\\(\\delta + \\Delta + \\gamma + \\Gamma - \\pi - \\phi\\)\nFracciones:\n$\\frac{3}{4} + \\frac{\\lambda}{\\omega}$\n\\(\\frac{3}{4} + \\frac{\\lambda}{\\omega}\\)\nSumatorias:\n$\\sum_{i=1}^{N} (x_i-\\mu)^2$\n\\(\\sum_{i=1}^{N} (x_i-\\mu)^2\\) \\(\\displaystyle\\sum_{i=1}^{N} (x_i-\\mu)^2\\)\nIntegrales:\n$\\int_{0}^{+\\infty} \\cos{(x)}dx$\n\\(\\int_{0}^{+\\infty} \\cos{(x)}dx\\) \\(\\displaystyle\\int_{0}^{+\\infty} \\cos{(x)}dx\\)\nEspeciales:\n$\\hat{\\mu} = \\bar{x} \\iff \\bar{x} = \\hat{\\mu}$\n\\(\\hat{\\mu} = \\bar{x} \\iff \\bar{x} = \\hat{\\mu}\\)",
    "crumbs": [
      "Unidad 2. R Markdown",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Comunicaci√≥n de Resultados: R Markdown</span>"
    ]
  },
  {
    "objectID": "capitulos/02_Rmarkdown.html#detalles-espec√≠ficos-para-html",
    "href": "capitulos/02_Rmarkdown.html#detalles-espec√≠ficos-para-html",
    "title": "4¬† Comunicaci√≥n de Resultados: R Markdown",
    "section": "4.5 Detalles espec√≠ficos para html",
    "text": "4.5 Detalles espec√≠ficos para html\n\nTodo lo que vimos hasta ac√° funciona para cualquier formato de salida deseado. Esta es una de las mayores virtudes de R Markdown, ya que podemos independizar nuestro trabajo de los detalles propios de cada sistema, generando cualquiera de ellos a partir del mismo script.\nAhora bien, si tenemos en mente un formato de salida en particular, podemos personalizar a√∫n m√°s detalles con opciones espec√≠ficas para ese formato.\nUna posible manera de lograr esto consiste en agregar detalles en la secci√≥n output del encabezado YAML.\nPor ejemplo, el encabezado del archivo que genera este HTML luce as√≠:\n\n---\ntitle: \"Comunicaci√≥n de Resultados: R Markdown\"\nsubtitle: \"An√°lisis Exploratorio de Datos | Licenciatura en Estad√≠stica | FCEyE | UNR\"\nauthor: \n  - Mg. Diego Marfet√°n Molina\n  - Lic. Iv√°n Millanes\ndate: \"8/26/24\"\nlang: es\ntoc: true\nformat: \n  html:\n    self-contained: true\n    df-print: paged\n    theme:\n      light: journal\n      dark: darkly\nknitr:\n  opts_chunk: \n    echo: true\n    message: false\n    warning: false\n    fig.align: center\n---\n\nself-contained indica que las figuras se deben incrustar en el c√≥digo, con lo cual el documento es ‚Äúportable‚Äù (cualquiera que tenga el HTML puede ver todas las im√°genes incluidas).\ntheme define el aspecto general del documento, con respecto a colores, sombreados, estilo del texto, etc. (link a lista de temas disponibles).\n\n\n\nQuienes se sientan c√≥modos/as escribiendo c√≥digo HTML, pueden definir m√°s opciones de personalizaci√≥n (colores, tama√±os, fuentes, espaciados, etc.) en otro archivo de formato .css (cascading style sheet) y avisarle a R Markdown que lo tenga en cuenta nombr√°ndolo en el encabezado:\n\n--- \ntitle: \"Comunicaci√≥n de Resultados: R Markdown\"\nformat: \n  html:\n    self-contained: true\n    df-print: paged\n    css: archivo_de_estilo.css\n---\n\nOtro aspecto que se puede personalizar bastante al trabajar con salida en html es la forma en la que se conjuntos de datos o tablas. Veamos algunas opciones:\nOpci√≥n 1: agregar df_print: paged entre las opciones del output en el YAML, logrando que los conjuntos de datos se puedan explorar interactivamente.\nOpci√≥n 2: usando el paquete DT, que con su funci√≥n datatable(), que hace que los conjuntos de datos se presenten en tablas filtrables y reordenables. Ejemplo:\n\n\nmtcars %&gt;% \n  datatable(filter = \"top\", options = list(scrollX = TRUE)) %&gt;% \n  formatStyle(columns = 0:11, fontSize = \"75%\")\n\n\n\n\n\n\n\nOpci√≥n 3: combinar la funci√≥n kable() del paquete knitr con funciones de configuraci√≥n adicionales provistas por el paquete kableExtra. Por ejemplo, con las funciones row_spec() y column_spec() podemos modificar el aspecto del texto (color, formato, etc.) de columnas y filas determinadas; adem√°s, agregamos una barra de desplazamiento para evitar imprimir la tabla entera mediante scroll_box(). Muchas m√°s opciones de personalizaci√≥n de tablas con kableExtra pueden consultarse en su vi√±eta oficial.\n\n\nmtcars %&gt;% \n  kable() %&gt;% \n  kable_styling(font_size = 10, bootstrap_options = \"hover\") %&gt;% \n  column_spec(1, bold = TRUE, background = \"#DF0101\", color = \"white\") %&gt;% \n  row_spec(0, background = \"#2E2E2E\", bold = TRUE, color = \"white\") %&gt;% \n  row_spec(4:5, italic = TRUE, color = \"#2E9AFE\") %&gt;% \n  scroll_box(height = \"300px\")\n\n\n\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\ncarb\n\n\n\n\nMazda RX4\n21.0\n6\n160.0\n110\n3.90\n2.620\n16.46\n0\n1\n4\n4\n\n\nMazda RX4 Wag\n21.0\n6\n160.0\n110\n3.90\n2.875\n17.02\n0\n1\n4\n4\n\n\nDatsun 710\n22.8\n4\n108.0\n93\n3.85\n2.320\n18.61\n1\n1\n4\n1\n\n\nHornet 4 Drive\n21.4\n6\n258.0\n110\n3.08\n3.215\n19.44\n1\n0\n3\n1\n\n\nHornet Sportabout\n18.7\n8\n360.0\n175\n3.15\n3.440\n17.02\n0\n0\n3\n2\n\n\nValiant\n18.1\n6\n225.0\n105\n2.76\n3.460\n20.22\n1\n0\n3\n1\n\n\nDuster 360\n14.3\n8\n360.0\n245\n3.21\n3.570\n15.84\n0\n0\n3\n4\n\n\nMerc 240D\n24.4\n4\n146.7\n62\n3.69\n3.190\n20.00\n1\n0\n4\n2\n\n\nMerc 230\n22.8\n4\n140.8\n95\n3.92\n3.150\n22.90\n1\n0\n4\n2\n\n\nMerc 280\n19.2\n6\n167.6\n123\n3.92\n3.440\n18.30\n1\n0\n4\n4\n\n\nMerc 280C\n17.8\n6\n167.6\n123\n3.92\n3.440\n18.90\n1\n0\n4\n4\n\n\nMerc 450SE\n16.4\n8\n275.8\n180\n3.07\n4.070\n17.40\n0\n0\n3\n3\n\n\nMerc 450SL\n17.3\n8\n275.8\n180\n3.07\n3.730\n17.60\n0\n0\n3\n3\n\n\nMerc 450SLC\n15.2\n8\n275.8\n180\n3.07\n3.780\n18.00\n0\n0\n3\n3\n\n\nCadillac Fleetwood\n10.4\n8\n472.0\n205\n2.93\n5.250\n17.98\n0\n0\n3\n4\n\n\nLincoln Continental\n10.4\n8\n460.0\n215\n3.00\n5.424\n17.82\n0\n0\n3\n4\n\n\nChrysler Imperial\n14.7\n8\n440.0\n230\n3.23\n5.345\n17.42\n0\n0\n3\n4\n\n\nFiat 128\n32.4\n4\n78.7\n66\n4.08\n2.200\n19.47\n1\n1\n4\n1\n\n\nHonda Civic\n30.4\n4\n75.7\n52\n4.93\n1.615\n18.52\n1\n1\n4\n2\n\n\nToyota Corolla\n33.9\n4\n71.1\n65\n4.22\n1.835\n19.90\n1\n1\n4\n1\n\n\nToyota Corona\n21.5\n4\n120.1\n97\n3.70\n2.465\n20.01\n1\n0\n3\n1\n\n\nDodge Challenger\n15.5\n8\n318.0\n150\n2.76\n3.520\n16.87\n0\n0\n3\n2\n\n\nAMC Javelin\n15.2\n8\n304.0\n150\n3.15\n3.435\n17.30\n0\n0\n3\n2\n\n\nCamaro Z28\n13.3\n8\n350.0\n245\n3.73\n3.840\n15.41\n0\n0\n3\n4\n\n\nPontiac Firebird\n19.2\n8\n400.0\n175\n3.08\n3.845\n17.05\n0\n0\n3\n2\n\n\nFiat X1-9\n27.3\n4\n79.0\n66\n4.08\n1.935\n18.90\n1\n1\n4\n1\n\n\nPorsche 914-2\n26.0\n4\n120.3\n91\n4.43\n2.140\n16.70\n0\n1\n5\n2\n\n\nLotus Europa\n30.4\n4\n95.1\n113\n3.77\n1.513\n16.90\n1\n1\n5\n2\n\n\nFord Pantera L\n15.8\n8\n351.0\n264\n4.22\n3.170\n14.50\n0\n1\n5\n4\n\n\nFerrari Dino\n19.7\n6\n145.0\n175\n3.62\n2.770\n15.50\n0\n1\n5\n6\n\n\nMaserati Bora\n15.0\n8\n301.0\n335\n3.54\n3.570\n14.60\n0\n1\n5\n8\n\n\nVolvo 142E\n21.4\n4\n121.0\n109\n4.11\n2.780\n18.60\n1\n1\n4\n2\n\n\n\n\n\n\n\n\n\nOpci√≥n 4: para tablas peque√±as, podemos recurrir a Tables Generator. Generamos all√≠ la tabla a mano, copiamos el c√≥digo html y lo pegamos directamente en el Rmd.",
    "crumbs": [
      "Unidad 2. R Markdown",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Comunicaci√≥n de Resultados: R Markdown</span>"
    ]
  },
  {
    "objectID": "capitulos/02_Rmarkdown.html#detalles-espec√≠ficos-para-pdf",
    "href": "capitulos/02_Rmarkdown.html#detalles-espec√≠ficos-para-pdf",
    "title": "4¬† Comunicaci√≥n de Resultados: R Markdown",
    "section": "4.6 Detalles espec√≠ficos para pdf",
    "text": "4.6 Detalles espec√≠ficos para pdf\n\nSi queremos producir documentos en formato PDF desde RStudio, necesitamos tener instalado LaTeX en nuestra computadora‚Ä¶ pero ¬øqu√© es LaTeX? Seg√∫n su propia web, LaTeX (pronunciado latech) es un sistema para preparaci√≥n de documentos ‚Äúde alta calidad‚Äù.\nIncluye herramientas dise√±adas para producir muchos tipos de documentaci√≥n t√©cnica, gracias a lo cual se ha convertido en el programa est√°ndar dentro del √°mbito acad√©mico y, sobre todo, de la divulgaci√≥n cient√≠fica (especialmente entre las ciencias duras).\n\n\n\n\n\n\n\n\n\n\n\nLa principal diferencia entre LaTeX y otros sistemas de generaci√≥n de documentos de texto, como por ejemplo Word, puede resumirse en dos puntos:\n\nEn Word, lo que escribo (lo que veo en la pantalla) es lo que obtengo cuando guardo el documento\nCon LaTeX no obtengo lo mismo que veo, sino que describo c√≥mo quiero que luzca el documento mediante comandos espec√≠ficos\n\nAl igual que R y RStudio, LaTeX es un software gratuito y de distribuci√≥n libre. Una muestra de la gran cantidad de documentos que podemos crear mediante LaTeX puede consultarse en Overleaf, donde se listan ejemplos de libros, curr√≠culums, posters, tesis y muchos otros formatos.\n\n\n4.6.1 Instalaci√≥n de LaTeX\n\nLa descarga y posterior instalaci√≥n de LaTeX ha sido siempre proceso generalmente tedioso que puede variar mucho de una PC a otra, sobre todo debido a configuraciones de red, versiones de sistemas operativos, permisos para agregar paquetes, etc.\nPara usuarios/as de Windows, la manera m√°s recomendable de instalar LaTeX es a trav√©s de MiKTeX, una especie de ‚Äúdistribuidor oficial‚Äù. Para usuarios/as de otros sistemas operativos, sugerimos consultar las mejores opciones en la web oficial del proyecto LaTeX, o bien aqu√≠.\nSin embargo, quienes usan R no tienen de qu√© preocuparse. Se puede usar R para instalar una distribuci√≥n de LaTeX minimalista que funciona como un encanto, con estos pasos:\n\n\n# Primero, instal√° el paquete tinytex:\ninstall.packages(\"tinytex\")\n# Luego, instal√° LaTeX corriendo en R:\ntinytex::install_tinytex()\n\n\nUna vez instalado LaTeX (ya sea por fuera de R o con este paquete) no es necesario abrir este programa para poder utilizarlo, ya que RStudio se comunicar√° directamente con √©l detr√°s de escena, tal como lo hace con R.\nCabe mencionar nuevamente a Overleaf, que nos ofrece un editor online de LaTeX totalmente gratuito (requiere que nos registremos definiendo usuario y contrase√±a) por si queremos hacer cosas en LaTeX sin instalar nada o en forma colaborativa.\n\n\n\n4.6.2 Opciones para LaTeX\n\nLa principal diferencia con lo visto hasta aqu√≠ es que en el encabezado YAML vamos a tener que especificar el tipo de salida que estamos buscando:\n\n\n---\ntitle: \"Mi Primer Markdown en PDF\"\nsubtitle: \"AED | Lic. en Estad√≠stica | FCEyE | UNR\"\nauthor: \"Diego & Iv√°n\"\ndate: \"Agosto 2024\"\noutput: pdf_document\n---\n\n\nPara salidas en PDF, las opciones de personalizaci√≥n del YAML Metadata se multiplican. Algunas de las m√°s comunes son:\n\nfontsize: tama√±o de la fuente (10pt, 11pt, 12pt)\ngeometry: m√°rgenes, orientaci√≥n de la hoja, tama√±o del papel (a4paper, letterpaper, etc.)\ndocumentclass: tipo de documento (article, report, book, etc.)\n\n\n\n\n\nAl igual que R, el sistema LaTeX depende en gran medida de funciones que se encuentran disponibles en paquetes que deberemos instalar a medida que sean necesarios. La inclusi√≥n de paquetes puede realizarse directamente en el encabezado, siguiendo el formato \\usepackage[opciones]{nombre_del_paquete}.\nDurante la instalaci√≥n, es posible configurar LaTeX para que los paquetes mencionados dentro del archivo que estamos ejecutando se instalen autom√°ticamente, ahorr√°ndonos la molestia de hacerlo manualmente (como en RStudio):\n\n\n---\ntitle: \"Mi Primer Markdown en PDF\"\nsubtitle: \"AED | Lic. en Estad√≠stica | FCEyE | UNR\"\nauthor: \"Diego & Iv√°n\"\ndate: \"Agosto 2024\"\nfontsize: 12pt\ngeometry: a4paper\ndocumentclass: article\noutput: pdf_document\nheader-includes:\n  - \\usepackage[spanish]{babel}\n---\n\n\nEn este caso, estamos utilizando el paquete babel con la opci√≥n spanish para que ciertos aspectos del documento se generen en idioma espa√±ol.\nUn comentario al paso: si lo que necesitamos es crear tablas, las funciones ya mencionadas del paquete kableExtra tambi√©n ofrecen opciones espec√≠ficas para trabajar con LaTeX y poder generar lo que se necesita. Tambi√©n podemos generar la tabla en otro entorno, como el ya mencionado Tables Generator, y pegar el c√≥digo de LaTeX directamente en el Rmd.\n\n\n\n4.6.3 Diapositivas\n\nUn formato √∫til de salida PDF es la presentaci√≥n de diapositivas, la cual estamos acostumbrados a crear mediante programas como PowerPoint. En este caso la opci√≥n que debemos elegir en el men√∫ es Presentation y luego PDF (Beamer):\n\n\n\n\n\n\n\n\n\n\n\nEl encabezado de nuestro Rmd luce as√≠:\n\n\n---\ntitle: \"Mi Primer Documento Beamer\"\nsubtitle: \"An√°lisis Exploratorio de Datos\"\nauthor: \"Diego & Iv√°n\"\ndate: \"Lic. en Estad√≠stica - FCEyE - UNR\"\noutput: beamer_presentation\n---\n\n\nSi bien los comandos de LaTeX presentados en este tutorial son v√°lidos tanto para reportes PDF como para diapositivas, diagramar informes o art√≠culos es totalmente diferente a preparar una presentaci√≥n en diapositivas.\nDe forma exageradamente resumida podemos remarcar ciertas ventajas y desventajas al comparar las estructuras de estos diversos formatos:\n\nVentajas de utilizar Beamer: documento m√°s compacto, el formato diapositiva permite una mejor separaci√≥n de ideas\nDesventajas de utilizar Beamer: hay que dedicarle mucho tiempo a organizar c√≥digo, texto e im√°genes para lograr que algunas ideas entren en una misma diapositiva\n\nEn Beamer, podemos crear una nueva diapositiva mediante encabezados de primer (#) o segundo orden (##), o bien con tres asteriscos (***) o puntos (---) consecutivos.\n\n# Titulo de la Diapo 1\nTexto de la diapositiva 1\n\n# Titulo de la Diapo 2\nTexto de la diapositiva 2\n\n***\nTexto de la diapositiva 3 (esta diapo no tiene t√≠tulo)\n\nLas presentaciones en Beamer se caracterizan por contar con una gran cantidad de temas (themes) disponibles para personalizar el aspecto de las diapositivas, con respecto a fuentes, colores y dem√°s formatos.\nEn el encabezado del documento podemos definir los temas a utilizar de la siguiente manera:\n\n\n---\ntitle: \"Mi Primer Documento Beamer\"\nsubtitle: \"An√°lisis Exploratorio de Datos\"\nauthor: \"Diego & Iv√°n\"\ndate: \"Lic. en Estad√≠stica - FCEyE - UNR\"\noutput: beamer_presentation\ntheme: \"Madrid\"\ncolortheme: \"orchid\"\nfonttheme: \"serif\"\n---\n\n\nUna lista de los temas disponibles, tanto generales como de colores y fuentes, puede consultarse en esta web.\nEn la siguiente imagen podemos apreciar el aspecto de las diapositivas generadas con el tema Madrid, color orchid y fuente serif:",
    "crumbs": [
      "Unidad 2. R Markdown",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Comunicaci√≥n de Resultados: R Markdown</span>"
    ]
  },
  {
    "objectID": "capitulos/02_Rmarkdown.html#comentarios-finales",
    "href": "capitulos/02_Rmarkdown.html#comentarios-finales",
    "title": "4¬† Comunicaci√≥n de Resultados: R Markdown",
    "section": "4.7 Comentarios finales",
    "text": "4.7 Comentarios finales\n\nCon tantos t√©rminos dando vueltas (Markdown, RMarkdown, Knit, Pandoc, html, LaTeX‚Ä¶ üòñ), lo natural es perderse y no saber qui√©n es qui√©n ni qu√© hace qu√©.\nLo bueno es que en general podemos usar todo esto sin tenerlo muy en claro, pero ac√° van algunas aclaraciones solo para los que est√©n interesados en saber m√°s.\n\n\n4.7.1 Lenguajes de Marcado Ligero, Markdown y R Markdown\n\nUn lenguaje de marcado ligero (markup language) es un sistema estandarizado con reglas para insertar s√≠mbolos en un documento de texto plano para controlar su estructura, formato y relaci√≥n entre sus partes.\nLos s√≠mbolos que se utilizan para este ‚Äúmarcado‚Äù son caracteres b√°sicos interpretables por alg√∫n dispositivo (computadora, impresora, navegador, etc.). Un documento con marcado ligero tiene entonces dos tipos de texto: texto para ser mostrado y caracteres que controlan la forma de mostrarlo.\nDos lenguajes de marcado ligero muy conocidos y utilizados, aunque no muy sencillos de usar, son XML (Extensive Markup Language) y HTML (Hypertext Markup Language).\nMarkdown es un lenguaje de marcado ligero muy sencillo de usar que s√≥lo emplea caracteres simples (como numerales o asteriscos) para indicar el formato y la estructura del texto. Surgi√≥ con la idea de simplificar algunos aspectos del lenguaje HTML, de modo que sea m√°s f√°cil editar contenido para p√°ginas web.\nLa idea de su desarrollador, John Gruber, era que sea una sintaxis f√°cil de escribir, pero sobre todo de leer. A diferencia de lo que pasa con HTML, tranquilamente podemos abrir un documento marcado con Markdown (.md) y leer su texto sin problemas.\nCon el tiempo fueron surgiendo varios derivados, haciendo que no haya una sintaxis √∫nica de Markdown. Por ejemplo:\n\nPandoc Markdown es el nombre de una de estas versiones que extienden Markdown con sintaxis para incluir tablas, listas, pies de p√°gina, citas, etc.\nR Markdown se basa en Pandoc Markdown pero agrega sus propias reglas para poder incluir bloques de c√≥digo de R y reglas, tanto para controlar su ejecuci√≥n como la forma en la que se muestran los resultados. Los documentos escritos en R Markdown son de extensi√≥n .Rmd (.qmd desde el lanzamiento de Quarto). Este lenguaje est√° implementado en el paquete rmarkdown.\n\nAdem√°s de RStudio/Posit, algunas compa√±√≠as que tambi√©n utilizan Markdown son OpenAI (desarrolladora de ChatGPT), Discord, GitHub, Microsoft, Mozilla, entre otras.\n\n\n\n4.7.2 El proceso detr√°s de R Markdown\n\nUna vez que hemos creado un archivo Rmd siguiendo las reglas de R Markdown y estamos listos para producir el resultado final, hacemos clic en el bot√≥n Knit o, equivalentemente, corremos la funci√≥n render() del paquete rmarkdown.\nEsta acci√≥n genera un proceso de dos etapas:\n\nEl paquete knitr toma al archivo, identifica cu√°les son las porciones de c√≥digo a ejecutar, lo eval√∫a, toma los resultados y los ‚Äúincrusta‚Äù en el archivo siguiendo las reglas de markdown. Es decir, genera un archivo .md intermedio que no vemos, ni nos interesa.\nLuego viene Pandoc, toma el archivo .md y lo convierte en un archivo de salida con el formato deseado: .html, .pdf o .docx, entre otros. Este programa ya viene instalado con RStudio, y lo mencionamos antes porque, adem√°s de convertir los .md en el formato que queramos, es el software que implementa la versi√≥n extendida del lenguaje Pandoc‚Äôs Markdown.\nCuando el formato de salida es un PDF, hay un paso m√°s. Pandoc convierte el .md en un archivo .tex, que sigue la sintaxis de LaTeX (por default este archivo es elimnado pero podr√≠amos pedir que se conserve). Para convertir el .tex a un .pdf, se necesita que venga uno de los motores de compilaci√≥n de LaTeX para hacer su tarea. Por defecto, se usa el motor pdflatex, pero hay otros disponibles (xelatex o lualatex). De estas instalaciones se encarga, por ejemplo, tinytex.\n\n¬°Voil√†! Con esos pasos m√°gicos tenemos nuestro ansiado archivo. Debajo vemos un esquema que representa el proceso de compilaci√≥n:\n\n\n\n\n\n\n\n\n\n\n\n\n4.7.3 Otros recursos relacionados al mundo de R Markdown\nSi ten√©s ganas de seguir aprendiendo sobre R Markdown, pod√©s consultar esta peque√±a lista de gu√≠as y tutoriales:\n\nSitio oficial de R Markdown\nR Markdown - The Definitive Guide (Libro de Yihui Xie)\nGu√≠a de Referencia en la web de RStudio\nMachete en la web de RStudio\nTips para mejorar el aspecto de un documento R Markdown\nPaquete knitr\nPaquete bookdown: para escribir y publicar nuestros propios libros desde R. Incluye formatos de salida HTML, PDF, ePub o Kindle, estos dos √∫ltimos para lectores de ebooks. El libro creado se puede hospedar de forma gratuita y sencilla en GitHub e integrarse a plataformas de Moodle.\nPaquete blogdown: permite desarrollar p√°ginas web desde R.\nPaquete learnr: permite transformar documentos Rmd en tutoriales interactivos para ser usados como material did√°ctico.\nPaquete exams: bas√°ndose en R Markdown, permite generar autom√°ticamente ejercicios para ex√°menes de Moodle, con la posibilidad de no s√≥lo emplear valores aleatorios sino tambi√©n preguntas aleatorias dentro de un mismo enunciado.\nTutoriales de gganimate: Post en datanovia.com, Vi√±etas del paquete y Laboratorio de experimentaci√≥n de rOpenSci.",
    "crumbs": [
      "Unidad 2. R Markdown",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Comunicaci√≥n de Resultados: R Markdown</span>"
    ]
  },
  {
    "objectID": "capitulos/02_reportes_parametrizados.html",
    "href": "capitulos/02_reportes_parametrizados.html",
    "title": "5¬† Comunicaci√≥n de Resultados: Reportes Parametrizados",
    "section": "",
    "text": "5.1 Datos de Cultivos\nlibrary(readxl)\ncultivos &lt;- read_excel(\"../data/unidad02/cultivos.xlsx\", na = \"-\")\nhead(cultivos, 10)\n\n# A tibble: 10 √ó 8\n   prov         dpto      cultivo campa√±a sup_sembrada sup_cosechada  prod  rend\n   &lt;chr&gt;        &lt;chr&gt;     &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt;         &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 BUENOS AIRES 25 DE MA‚Ä¶ Ajo     1969/70            3             3    10  3333\n 2 BUENOS AIRES 25 DE MA‚Ä¶ Ajo     1970/71            1             1     3  3000\n 3 BUENOS AIRES 25 DE MA‚Ä¶ Alpiste 1969/70          500           400   240   600\n 4 BUENOS AIRES 25 DE MA‚Ä¶ Alpiste 1970/71          150           130    78   600\n 5 BUENOS AIRES 25 DE MA‚Ä¶ Alpiste 1975/76          350           350   315   900\n 6 BUENOS AIRES 25 DE MA‚Ä¶ Alpiste 1976/77          250           200   240  1200\n 7 BUENOS AIRES 25 DE MA‚Ä¶ Alpiste 1977/78          150           150   180  1200\n 8 BUENOS AIRES 25 DE MA‚Ä¶ Alpiste 1978/79          100           100   130  1300\n 9 BUENOS AIRES 25 DE MA‚Ä¶ Alpiste 1979/80          100           100   120  1200\n10 BUENOS AIRES 25 DE MA‚Ä¶ Alpiste 1980/81          100           100   120  1200\nProducci√≥n de Centeno seg√∫n provincia\n\n\nProvincia\n2018/19\n2019/20\n% Var.\n\n\n\n\nBUENOS AIRES\n22.688\n19.863\n-12,45\n\n\nCORDOBA\n24.648\n183.144\n643,04\n\n\nLA PAMPA\n28.140\n5.630\n-79,99\n\n\nSAN LUIS\n11.090\n12.065\n8,79\n\n\nSANTA FE\n0\n499\nInf\n\n\nTOTAL ARGENTINA\n86.566\n221.201\n155,53",
    "crumbs": [
      "Unidad 2. R Markdown",
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Comunicaci√≥n de Resultados: Reportes Parametrizados</span>"
    ]
  },
  {
    "objectID": "capitulos/02_reportes_parametrizados.html#datos-de-cultivos",
    "href": "capitulos/02_reportes_parametrizados.html#datos-de-cultivos",
    "title": "5¬† Comunicaci√≥n de Resultados: Reportes Parametrizados",
    "section": "",
    "text": "En esta clase trabajaremos con el conjunto de datos disponible en la planilla de Excel cultivos.xlsx.\nLos datos fueron extra√≠dos del sitio web https://datosestimaciones.magyp.gob.ar/, dependiente del Ministerio de Agricultura, Ganader√≠a y Pesca de Argentina.\nSe trata de una serie hist√≥rica de indicadores agr√≠colas desagregada a nivel departamental y provincial, para diferentes tipos de cultivos existentes en Argentina (soja, trigo, cebada, ma√≠z, sorgo, etc.) desde 1969 hasta 2021.\nLos indicadores presentes en la base son 4:\n\nsup_sembrada: superficie sembrada (en hect√°reas) del cultivo, para un departamento y campa√±a agr√≠cola en particular.\nsup_cosechada: superficie cosechada (en hect√°reas), debe ser menor o igual a la superficie sembrada.\nprod: producci√≥n (en toneladas) del cultivo alcanzada en ese departamento y campa√±a en particular.\nrend: rendimiento (en kg. por hect√°rea), se calcula como la raz√≥n entre producci√≥n y superficie cosechada, multiplicada por mil.\n\nImportamos la base, indicando que los valores perdidos est√°n representados por un gui√≥n, y vemos sus primeras 10 filas:\n\n\n\n\nSupongamos que nos encargan la tarea de generar un informe para cada cultivo presente en la base, analizando c√≥mo evolucion√≥ su producci√≥n a nivel nacional mediante un gr√°fico de l√≠nea, y comparando las campa√±as 2018/19 y 2019/20 entre provincias.\nPor ejemplo, para el centeno obtenemos los siguientes resultados:\n\n\n\n\nEl template para generar un reporte en HTML que incluye el gr√°fico y la tabla mostrados arriba se proporciona en el archivo 04_template.Rmd.",
    "crumbs": [
      "Unidad 2. R Markdown",
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Comunicaci√≥n de Resultados: Reportes Parametrizados</span>"
    ]
  },
  {
    "objectID": "capitulos/02_reportes_parametrizados.html#reportes-parametrizados",
    "href": "capitulos/02_reportes_parametrizados.html#reportes-parametrizados",
    "title": "5¬† Comunicaci√≥n de Resultados: Reportes Parametrizados",
    "section": "5.2 Reportes Parametrizados",
    "text": "5.2 Reportes Parametrizados\n\nLos reportes parametrizados resultan √∫tiles cuando tenemos que generar muchos documentos similares entre s√≠, con un formato en com√∫n, donde √∫nicamente cambian algunas variables puntuales.\nLa base de cultivos que estamos analizando es buen ejemplo de esta situaci√≥n, ya que necesitamos generar un reporte individual para cada uno de los 38 cultivos disponibles.\nExisten muchas maneras de resolver esta tarea, entre ellas:\n\nGenerar un archivo Rmd para cada cultivo, copiando y pegando 38 veces el mismo c√≥digo en 38 archivos diferentes.\nGenerar un √∫nico archivo Rmd e ir cambiando los datos cada vez que genero un nuevo reporte.\nGenerar un √∫nico archivo Rmd, parametrizarlo y dejar que R haga el trabajo pesado.\n\nEvidentemente vamos a preferir la √∫ltima opci√≥n, pero‚Ä¶ ¬øc√≥mo se logra esto?\nUna buena estrategia es empezar generando un archivo .Rmd para un √∫nico cultivo (el template). Una vez que estamos conformes con el resultado, es f√°cil ver que, para generar el reporte de los restantes cultivos, lo √∫nico que hay que hacer es proveer otro nombre a la hora de filtrar la base.\nPor lo tanto, podemos pensar al nombre del cultivo como un par√°metro que tomar√° diferentes valores de acuerdo al archivo que deseemos generar. Podemos llamar a este par√°metro nombre_cultivo y utilizarlo como valor de entrada del archivo Rmd a generar.\nDentro del template, la presencia del par√°metro nombre_cultivo se indica en el encabezado del documento, de la siguiente manera:\n\n---\ntitle: T√≠tulo\nauthor: Nombre\ndate: Fecha\noutput: html_document\nparams: \n nombre_cultivo: Centeno\n---\n\nLuego, en el cuerpo del .Rmd hacemos referencia a este valor con params$nombre_cultivo. Por ejemplo:\n\n\ncenteno &lt;- cultivos %&gt;% filter(cultivo == params$nombre_cultivo)\n\n\nPara evitar tener que cambiar a mano el valor asignado a nombre_cultivo, creamos otro script de R desde el cual mandamos a generar todos los reportes mediante un loop.\nLa funci√≥n que debemos emplear dentro del loop es render(), perteneciente al paquete rmarkdown, la cual tiene el mismo efecto que apretar el bot√≥n Knit en archivos Rmd o el bot√≥n Render para archivos qmd.\nAl momento de emplear esta funci√≥n, algunos de los argumentos que debemos definir son:\n\nruta y nombre del archivo donde se encuentra alojado el template\nruta y nombre del archivo donde deseamos guardar el resultado\nformato de salida (HTML, pdf, etc.)\nlista de par√°metros a emplear\n\nEjemplo:\n\n\nlibrary(rmarkdown)\n\nrender(\n input = \"MiTemplate.Rmd\",\n output_file = \"MiReporte.html\",\n output_format = \"html_document\",\n params = list(Parametro1 = valor1, Parametro2 = valor2)\n )\n\n\n\n\n\n\n\nTrabajo en Equipo\n\n\n\nCrear un loop en R que genere un reporte para cada posible cultivo, empleando el template provisto. El nombre del archivo generado debe coincidir con el del cultivo correspondiente (ejemplo: girasol.html, mandarina.html, etc.). El formato de salida puede ser HTML, PDF o Word.",
    "crumbs": [
      "Unidad 2. R Markdown",
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Comunicaci√≥n de Resultados: Reportes Parametrizados</span>"
    ]
  }
]